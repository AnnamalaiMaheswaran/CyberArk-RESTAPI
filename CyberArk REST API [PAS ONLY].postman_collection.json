{
	"info": {
		"_postman_id": "7c04c870-f845-4d5d-87f7-ab0301b6522b",
		"name": "CyberArk REST API [PUBLIC]",
		"description": "All available requests in CyberArk Privileged Account Security Web Services for All Versions\n\n**Last Updated Version:** v11.7\n\n# THIS IS UNOFFICIAL DOCUMENTATION\n\n## New Features & Additions\n\n* Bulk Upload Accounts endpoints now available in Accounts > Bulk Upload Accounts.\n* Authentication Methods can be managed via API.\n* All Platform Management can be managed via API.\n* Initial documentation of CyberArk's IDaptive Identity Platform API is available within the \"IDaptive Identity Platform\" folder.\n\nHappy automating!\n\n## Getting Started Guide\n\n[Getting Started with REST Using Postman](https://github.com/infamousjoeg/CyberArk-RESTAPI/blob/master/Getting%20Started%20with%20REST%20Using%20Postman.pdf) (PDF)\n\n## Community Tools\n\n* [psPAS](https://github.com/pspete/psPAS) - PowerShell Module for CyberArk's REST API\n* [CredentialRetriever](https://github.com/pspete/CredentialRetriever) - PowerShell Module for CyberArk's Application Access Manager (AAM)\n* [pyAIM](https://github.com/infamousjoeg/pyAIM) - Python Client Library for CyberArk's Application Access Manager (AAM)\n\n## Code Examples\n\n* [cyberark/epv-api-scripts](https://github.com/cyberark/epv-api-scripts)\n* [infamousjoeg on GitHub](https://github.com/infamousjoeg?tab=repositories)\n* [CyberArk's Automation Greatest Hits (Awesome List of Automation)](https://cybr.rocks/greatesthits)\n\n## YouTube Videos Playlist\n\n* [CyberArk Videos Playlist Curated by InfamousJoeG](https://www.youtube.com/playlist?list=PL-p_9AwMQDmkS6rCXQrINn0Xc7dv73dWU)\n\n## Maintainer\n\n[Joe Garcia](https://github.com/infamousjoeg)\n\n[Buy me a coffee](https://www.buymeacoffee.com/infamousjoeg)\n\n## Status Codes\n\n| Status Name | Status Code | Status Description |\n|---|---|---|\n| Success | 200 | The request succeeded. The actual response will depend on the request method used. |\n| Created | 201 | The request was fulfilled and resulted in a new resource being created. |\n| Bad Request | 400 | The request could not be understood by the server due to incorrect syntax. |\n| Unauthorized | 401 | The request requires user authentication. |\n| Forbidden | 403 | The server received and understood the request, but will not fulfill it. Authorization will not help and the request MUST NOT be repeated. |\n| Not Found | 404 | The server did not find anything that matches the Request-URI. No indication is given of whether the condition is temporary or permanent. |\n| Conflict | 409 | The request could not be completed due to a conflict with the current state of the resource. |\n| Internal Server Error | 500 | The server encountered an unexpected condition which prevented it from fulfilling the request. |\n\n_NOTE: If you are having issues with DEL or PUT methods, make sure that your Password Vault Web Access (PVWA) Server's IIS instance does not include WebDav Publishing.  This will cause known issues._",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "v2 API",
					"item": [
						{
							"name": "Get Accounts",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									},
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts?search=DemoUser&searchType=contains&sort=UserName&offset=25&limit=1000&filter=safeName eq {{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts"
									],
									"query": [
										{
											"key": "search",
											"value": "DemoUser",
											"description": "List of keywords to search for in accounts, separated by a space."
										},
										{
											"key": "searchType",
											"value": "contains",
											"description": "Get accounts that either contain or start with the value specified in the Search parameter. Valid values: contains (default) or startswith."
										},
										{
											"key": "sort",
											"value": "UserName",
											"description": "Property or properties by which to sort returned accounts, followed by asc (default) or desc to control sort direction. Separate multiple properties with commas, up to a maximum of three properties."
										},
										{
											"key": "offset",
											"value": "25",
											"description": "Offset of the first account that is returned in the collection of results."
										},
										{
											"key": "limit",
											"value": "1000",
											"description": "Maximum number of returned accounts. If not specified, the default value is 50. The maximum number that can be specified is 1000."
										},
										{
											"key": "filter",
											"value": "safeName eq {{Safe}}",
											"description": "Get accounts from a specific safe, using the safe name."
										}
									]
								},
								"description": "This method returns a list of all the accounts in the Vault.\n\nThe user who runs this web service requires **List Accounts** permissions in the Safe."
							},
							"response": []
						},
						{
							"name": "Get Account Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts",
										"{{AccountID}}"
									]
								},
								"description": "This method returns information about an account identified by its ID.\n\nThe user who runs this web service requires **List Accounts** permissions in the Safe where the account is located inside the Vault."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:27:37 GMT"
										},
										{
											"key": "Content-Length",
											"value": "317"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"24_3\",\n    \"name\": \"ANSIBLE-RESTAPI-USER\",\n    \"address\": \"192.168.3.101\",\n    \"userName\": \"Svc_AnsibleREST\",\n    \"platformId\": \"JG-CyberArkVault\",\n    \"safeName\": \"D-CYBR-RESTAPI-ACCTS\",\n    \"secretType\": \"password\",\n    \"secretManagement\": {\n        \"automaticManagementEnabled\": true,\n        \"status\": \"success\",\n        \"lastModifiedTime\": 1541876282\n    },\n    \"createdTime\": 1541876282\n}"
								}
							]
						},
						{
							"name": "Get Account Activity",
							"request": {
								"method": "GET",
								"header": [
									{
										"type": "text",
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/Activities",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Accounts",
										"{{AccountID}}",
										"Activities"
									]
								},
								"description": "This method returns the activities of a specific account that is identified by its account ID."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:28:13 GMT"
										},
										{
											"key": "Content-Length",
											"value": "6876"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetAccountActivitiesResult\": [\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"CPM Change Password\",\n            \"ActivityCode\": 24,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"address=192.168.3.101;username=Svc_AnsibleREST;\",\n            \"Path\": \"Root\",\n            \"Reason\": \"ImmediateTask\",\n            \"Time\": \"11/10/2018 23:58:03\",\n            \"UserName\": \"PasswordManagerNG\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Store password\",\n            \"ActivityCode\": 294,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"\",\n            \"Time\": \"11/10/2018 23:58:02\",\n            \"UserName\": \"PasswordManagerNG\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM\",\n            \"Time\": \"11/10/2018 23:58:02\",\n            \"UserName\": \"PasswordManagerNG\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM\",\n            \"Time\": \"11/10/2018 23:58:02\",\n            \"UserName\": \"PasswordManagerNG\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"LastTask\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[VerifyTask]\",\n            \"Time\": \"11/10/2018 23:57:41\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"CPMStatus\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[success]\",\n            \"Time\": \"11/10/2018 23:57:41\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"RetriesCount\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[-1]\",\n            \"Time\": \"11/10/2018 23:57:41\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"ResetImmediately\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[ChangeTask]\",\n            \"Time\": \"11/10/2018 23:57:41\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"(Action: Show Password)\",\n            \"Time\": \"11/10/2018 23:57:30\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"CPM Verify Password\",\n            \"ActivityCode\": 22,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"address=192.168.3.101;username=Svc_AnsibleREST;\",\n            \"Path\": \"Root\",\n            \"Reason\": \"ImmediateTask\",\n            \"Time\": \"11/04/2018 15:49:12\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM internal process\",\n            \"Time\": \"11/04/2018 15:49:12\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM\",\n            \"Time\": \"11/04/2018 15:49:10\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"LastTask\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[VerifyTask]\",\n            \"Time\": \"11/04/2018 15:45:58\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Delete File Category\",\n            \"ActivityCode\": 107,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"CPMStatus\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Old Value=[success]\",\n            \"Time\": \"11/04/2018 15:45:58\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Update File Category\",\n            \"ActivityCode\": 106,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"RetriesCount\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[-1] Old Value=[-1]\",\n            \"Time\": \"11/04/2018 15:45:58\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"ResetImmediately\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[VerifyTask]\",\n            \"Time\": \"11/04/2018 15:45:58\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Update File Category\",\n            \"ActivityCode\": 106,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"PolicyID\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[JG-CyberArkVault] Old Value=[CyberArk]\",\n            \"Time\": \"11/04/2018 15:45:51\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"AppPrv\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Application provider background refresh job\",\n            \"Time\": \"10/21/2018 13:39:22\",\n            \"UserName\": \"Prov_COMPONENTS\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"AppPrv\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"AIM password request\",\n            \"Time\": \"10/21/2018 13:38:57\",\n            \"UserName\": \"Prov_COMPONENTS\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"CPM Verify Password\",\n            \"ActivityCode\": 22,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"address=192.168.3.101;username=Svc_AnsibleREST;\",\n            \"Path\": \"Root\",\n            \"Reason\": \"ImmediateTask\",\n            \"Time\": \"10/21/2018 13:04:25\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM internal process\",\n            \"Time\": \"10/21/2018 13:04:25\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Retrieve password\",\n            \"ActivityCode\": 295,\n            \"ClientID\": \"CPM\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"CPM\",\n            \"Time\": \"10/21/2018 13:04:24\",\n            \"UserName\": \"PasswordManager\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"RetriesCount\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[-1]\",\n            \"Time\": \"10/21/2018 13:02:31\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"ResetImmediately\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[VerifyTask]\",\n            \"Time\": \"10/21/2018 13:02:31\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"CreationMethod\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[PVWA]\",\n            \"Time\": \"10/21/2018 13:02:23\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"Address\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[192.168.3.101]\",\n            \"Time\": \"10/21/2018 13:02:23\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"DeviceType\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[Application]\",\n            \"Time\": \"10/21/2018 13:02:22\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"UserName\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[Svc_AnsibleREST]\",\n            \"Time\": \"10/21/2018 13:02:22\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Add File Category\",\n            \"ActivityCode\": 105,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"PolicyID\",\n            \"Path\": \"Root\",\n            \"Reason\": \"Value=[CyberArk]\",\n            \"Time\": \"10/21/2018 13:02:22\",\n            \"UserName\": \"mike\"\n        },\n        {\n            \"AccountName\": \"ANSIBLE-RESTAPI-USER\",\n            \"Activity\": \"Store password\",\n            \"ActivityCode\": 294,\n            \"ClientID\": \"PVWA\",\n            \"MoreInfo\": \"\",\n            \"Path\": \"Root\",\n            \"Reason\": \"\",\n            \"Time\": \"10/21/2018 13:02:22\",\n            \"UserName\": \"mike\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"type": "text",
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"string\",\n\t\"address\": \"string\",\n\t\"userName\": \"string\",\n\t\"platformId\": \"string\",\n\t\"safeName\": \"string\",\n\t\"secretType\": \"password\",\n\t\"secret\": \"string\",\n\t\"platformAccountProperties\": {\n\t\t\"LogonDomain\": \"string\",\n\t\t\"Port\": \"integer\"\n\t},\n\t\"secretManagement\": {\n\t\t\"automaticManagementEnabled\": true,\n\t\t\"manualManagementReason\": \"string\"\n\t},\n\t\"remoteMachinesAccess\": {\n\t\t\"remoteMachines\": \"string\",\n\t\t\"accessRestrictedToRemoteMachines\": true\n\t}\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts"
									]
								},
								"description": "This method adds a new privileged account or SSH key to the Vault.\n\nTo run this web service, a user requires the following permission in the Vault:\n\n* Add account\n\nAND either\n\n* Update password\n\nOR\n\n* Update password properties\n\n**Note:** You require an additional license to add SSH keys to the Vault. For more information, contact your CyberArk representative."
							},
							"response": [
								{
									"name": "Add Dual Account - 201 Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											},
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Database-MySQL-db2.joegarcia.dev-cluster02sqluser01\",\n\t\"address\": \"db2.joegarcia.dev\",\n\t\"userName\": \"cluster02sqluser01\",\n\t\"platformId\": \"MySQLServer-DualAccounts\",\n\t\"safeName\": \"D-MySQL-Users\",\n\t\"secretType\": \"password\",\n\t\"secret\": \"Cyberark1\",\n\t\"platformAccountProperties\": {\n\t\t\"VirtualUsername\": \"cluster02sqluser\",\n\t\t\"Index\": \"1\",\n\t\t\"DualAccountStatus\": \"Active\"\n\t},\n\t\"secretManagement\": {\n\t\t\"automaticManagementEnabled\": false,\n\t\t\"manualManagementReason\": \"testing\"\n\t}\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Location",
											"value": "https://cyberark.joegarcia.dev/PasswordVault/api/Accounts/29_7"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=5CD7FDF700FD44E2; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002BD847BB673806B6186BE3FB6EB49CFE4EAB00A619FE17D78321027A47916681700000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=radius; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "api-supported-versions",
											"value": "11.0"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;preload"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Fri, 07 Feb 2020 19:04:06 GMT"
										},
										{
											"key": "Content-Length",
											"value": "481"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"29_7\",\n    \"name\": \"Database-MySQL-db2.joegarcia.dev-cluster02sqluser01\",\n    \"address\": \"db2.joegarcia.dev\",\n    \"userName\": \"cluster02sqluser01\",\n    \"platformId\": \"MySQLServer-DualAccounts\",\n    \"safeName\": \"D-MySQL-Users\",\n    \"secretType\": \"password\",\n    \"platformAccountProperties\": {\n        \"Index\": \"1\",\n        \"DualAccountStatus\": \"Active\",\n        \"VirtualUsername\": \"cluster02sqluser\"\n    },\n    \"secretManagement\": {\n        \"automaticManagementEnabled\": false,\n        \"manualManagementReason\": \"testing\",\n        \"lastModifiedTime\": 1581084295\n    },\n    \"createdTime\": 1581084295\n}"
								}
							]
						},
						{
							"name": "Add Pending Account",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"pendingAccount\": {\n\t\t\"UserName\":\"<user name>\",\n\t\t\"Address\":\"<address>\",\n\t\t\"AccountDiscoveryDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"AccountEnabled\":\"<enabled/disabled>\", \n\t\t\"AccountOSGroups\":\"<group name>\",\n\t\t\"AccountType\":\"<domain/local>\",\n\t\t\"Domain\":\"<domain name>\",\n\t\t\"PasswordNeverExpires\":\"<true/false>\",\n\t\t\"OSVersion\":\"<OS version>\",\n\t\t\"OU\":\"<OU>\",\n\t\t\"AccountCategory\":\"<Privileged/Non-privileged>\",\n\t\t\"UserDisplayName\":\"<user display name>\",\n\t\t\"AccountDescription\":\"<description>\",\n\t\t\"GID\":\"<GID>\",\n\t\t\"UID\":\"<UID>\",\n\t\t\"OSType\":\"<Windows/Unix>\",\n\t\t\"DiscoveryPlatformType\":\"<platform name>\",\n\t\t\"MachineOSFamily\":\"<workstation/server>\",\n\t\t\"LastLogonDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"LastPasswordSetDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"AccountExpirationDate\":\"<YYYY-MM-DDThh:mm:ssZ>\",\n\t\t\"AccountCategoryCriteria\":\"<criteria>\"\n\t}\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/PendingAccounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"PendingAccounts"
									]
								},
								"description": "This method enables an account or SSH key that is discovered by an external scanner to be added as a pending account to the Accounts Feed. This facilitates the privileged account workflow, during which users can identify privileged accounts and determine which are onboarded to the Vault.\n\n**Note:** In order to add SSH keys to the Vault, you require an additional license. For more information, contact your CyberArk representative."
							},
							"response": []
						},
						{
							"name": "Update Account",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n\t{\n\t\t\"op\": \"replace\",\n\t\t\"path\": \"/address\",\n\t\t\"value\": \"NewAddress\"\n\t},\n\t{\n\t\t\"op\": \"add\",\n\t\t\"path\": \"/port\",\n\t\t\"value\": \"3306\"\n\t},\n\t{\n\t\t\"op\": \"remove\",\n\t\t\"path\": \"/ticketnumber\",\n\t\t\"value\": \"\"\n\t}\n]",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts",
										"{{AccountID}}"
									]
								},
								"description": "This method updates an existing account's details. It is not mandatory to send all the account’s details. Any changed values sent in the request will be updated. All other properties values will remain the same.\n\nOn each property, the following operations can be performed:\n\n* Replace - replace the existing value of a property\n* Remove (to remove the property from the account)\n* Add (to add that property to the account)\n\nIt is possible to set several properties using the same command using the following structure:\n\n```json\n[\n\t{\n\t    \"op\": \"replace\",\n\t    \"path\": \"/platformaccountproperties\",\n\t    \"value\": \"{\n\t        \\\"{PropertyID1}\\\":\\\"{Value}\\\",\n\t        \\\"{PropertyID2}\\\":\\\"{Value}\\\",\n\t        \\\"{PropertyID3}\\\":\\\"{Value}\\\"\n\t    }\"\n\t}\n]\n```\n\nWhen sending several operations on the same property, only the last operation will affect the property."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{\n\t\t\"op\": \"replace\",\n\t\t\"path\": \"/address\",\n\t\t\"value\": \"NewAddress\"\n\t}\n]"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=16FEA5F59A5A4E3A; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002C10DFF4C7D9E95730A852C9200D8288EE70B01258A83CE498AB47E7A3515211200000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Tue, 15 Jan 2019 17:39:16 GMT"
										},
										{
											"key": "Content-Length",
											"value": "271"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"29_3\",\n    \"name\": \"TEST-RESTAPI-uadmin\",\n    \"address\": \"NewAddress\",\n    \"userName\": \"u_admin\",\n    \"platformId\": \"WinDomain\",\n    \"safeName\": \"TEST-RESTAPI\",\n    \"secretType\": \"password\",\n    \"secretManagement\": {\n        \"automaticManagementEnabled\": true,\n        \"lastModifiedTime\": 1547468682\n    },\n    \"createdTime\": 1547468682\n}"
								}
							]
						},
						{
							"name": "Delete Account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Accounts",
										"{{AccountID}}"
									]
								},
								"description": "This method deletes a specific account in the Vault.\n\nThe user who runs this web service requires **Delete Accounts** permissions in the Vault."
							},
							"response": []
						}
					],
					"event": [
						{
							"script": {
								"id": "bb51af81-8d2c-4287-9877-5ab04069f992",
								"exec": [
									""
								],
								"type": "text/javascript"
							},
							"listen": "prerequest",
							"disabled": false
						},
						{
							"listen": "test",
							"script": {
								"id": "95920a20-2557-454f-85f3-e8113e3bc5f2",
								"type": "text/javascript",
								"exec": [
									""
								]
							},
							"disabled": false
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "v1 API",
					"item": [
						{
							"name": "Get Account Details [v9.3+]",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts?Keywords={{Keywords}}&Safe={{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Accounts"
									],
									"query": [
										{
											"key": "Keywords",
											"value": "{{Keywords}}"
										},
										{
											"key": "Safe",
											"value": "{{Safe}}"
										}
									]
								},
								"description": "This method returns information about an account. If more than one account meets the search criteria, only the first account will be returned, although the Count output parameter will display the number of accounts that were found.\r\nOnly the following users can access this account:\r\n- Users who are members of the Safe where the account is stored.\r\n- Users who have access to this specific account. For more information about object level access control, refer to Object Level Access Control in the Privileged Account Security Implementation Guide.\r\n- The user who runs this web service requires the following permission in the Safe:\r\n  - List accounts\r\nNotes:\r\n- This method does not display the actual password.\r\n- If ten or more accounts are found, the Count Output parameter will show 10."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"disabled": true
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Content-Length",
											"value": "697"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jun 2017 17:48:52 GMT"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": ""
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": ""
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": ""
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": ""
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": "Desktop"
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": "ldap"
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/",
											"secure": false,
											"session": false,
											"value": "t2jlmd4i1yjna3morxfbr3pv"
										}
									],
									"body": "{\n  \"Count\": 1,\n  \"accounts\": [\n    {\n      \"AccountID\": \"41_4\",\n      \"InternalProperties\": [\n        {\n          \"Key\": \"CPMStatus\",\n          \"Value\": \"success\"\n        },\n        {\n          \"Key\": \"CreationMethod\",\n          \"Value\": \"PVWA\"\n        },\n        {\n          \"Key\": \"RetriesCount\",\n          \"Value\": \"-1\"\n        },\n        {\n          \"Key\": \"LastTask\",\n          \"Value\": \"VerifyTask\"\n        }\n      ],\n      \"Properties\": [\n        {\n          \"Key\": \"Safe\",\n          \"Value\": \"T-APP-CYBR-RESTAPI\"\n        },\n        {\n          \"Key\": \"Folder\",\n          \"Value\": \"Root\"\n        },\n        {\n          \"Key\": \"Name\",\n          \"Value\": \"Operating System-WindowsDomainAccount-cyberark.local-test.user0001\"\n        },\n        {\n          \"Key\": \"UserName\",\n          \"Value\": \"test.user0001\"\n        },\n        {\n          \"Key\": \"PolicyID\",\n          \"Value\": \"WindowsDomainAccount\"\n        },\n        {\n          \"Key\": \"LogonDomain\",\n          \"Value\": \"CYBERARK\"\n        },\n        {\n          \"Key\": \"LastSuccessVerification\",\n          \"Value\": \"1496683713\"\n        },\n        {\n          \"Key\": \"Address\",\n          \"Value\": \"cyberark.local\"\n        },\n        {\n          \"Key\": \"DeviceType\",\n          \"Value\": \"Operating System\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "List Activity by ID [v9.7+]",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/Activities?SafeName={{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Accounts",
										"{{AccountID}}",
										"Activities"
									],
									"query": [
										{
											"key": "SafeName",
											"value": "{{Safe}}"
										}
									]
								},
								"description": "This method returns the activities of a specific account that is identified by its account ID."
							},
							"response": []
						},
						{
							"name": "Add Account [v9.0+]",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"account\" : {\r\n    \"safe\":\"{{Safe}}\",\r\n    \"platformID\":\"WinDomain\",\r\n    \"address\":\"{{Address}}\",\r\n    \"accountName\":\"AccountName\",\r\n    \"password\":\"Password123\",\r\n    \"username\":\"{{UserName}}\",\r\n    \"disableAutoMgmt\":\"false\",\r\n    \"disableAutoMgmtReason\":\"N/A\",\r\n    \"groupName\":\"\",\r\n    \"groupPlatformID\":\"\",\r\n    \"properties\":\r\n    [\r\n      {\"Key\":\"Port\", \"Value\":\"<port>\"},\r\n      {\"Key\":\"ParamName\", \"Value\":\"Parameter value\"}\r\n    ]\r\n  }\r\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Account",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Account"
									]
								},
								"description": "This method adds a new privileged account to the Vault."
							},
							"response": []
						},
						{
							"name": "Add Pending Account [v9.7+]",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"pendingAccount\":{\r\n    \"UserName\":\"{{UserName}}\",\r\n    \"Address\":\"{{Address}}\",\r\n    \"AccountDiscoveryDate\":\"2016-12-19T08:19:03Z\",\r\n    \"AccountEnabled\":\"Disabled\",\r\n    \"AccountOSGroups\":\"Domain Admins\",\r\n    \"AccountType\":\"Domain\",\r\n    \"Domain\":\"joe-garcia.local\",\r\n    \"PasswordNeverExpires\":\"false\",\r\n    \"OSVersion\":\"Windows Server 2012 R2\",\r\n    \"OU\":\"Users\",\r\n    \"AccountCategory\":\"Privileged\",\r\n    \"UserDisplayName\":\"CA_EPVTestUser\",\r\n    \"AccountDescription\":\"CyberArk EPV Test User for Web Services\",\r\n    \"GID\":\"\",\r\n    \"UID\":\"\",\r\n    \"OSType\":\"Windows\",\r\n    \"DiscoveryPlatformType\":\"Windows Domain Accounts\",\r\n    \"MachineOSFamily\":\"server\",\r\n    \"LastLogonDate\":\"\",\r\n    \"LastPasswordSetDate\":\"2016-12-19T08:19:03Z\",\r\n    \"AccountExpirationDate\":\"\",\r\n    \"AccountCategoryCriteria\":\"<criteria>\"\r\n  }\r\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/PendingAccounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"PendingAccounts"
									]
								},
								"description": "This method enables an account that is discovered by an external scanner to be added as a pending account to the Accounts Feed. This facilitates the privileged account workflow, during which users can identify privileged accounts and determine which are onboarded to the Vault.\r\nNote: This method adds password accounts only. It does not add SSH Keys."
							},
							"response": []
						},
						{
							"name": "Check-In Exclusive Account [v9.10+]",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/CheckIn",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Accounts",
										"{{AccountID}}",
										"CheckIn"
									]
								},
								"description": "This method checks an exclusive account into the Vault.\r\n\r\n* If the account is managed automatically by the CPM, after it is checked in, the password is changed immediately.\r\n* If the account is managed manually, a notification is sent to a user who is authorized to change the password. The account is checked in automatically after it has been changed.\r\n\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations"
							},
							"response": []
						},
						{
							"name": "Update Account Details [v9.5+]",
							"request": {
								"method": "PUT",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Accounts\":\r\n  {\r\n    \"Folder\":\"{{Folder}}\",\r\n    \"AccountName\":\"{{ObjectName}}\",\r\n    \"DeviceType\":\"Operating System\",\r\n    \"PlatformID\":\"WinDomain\",\r\n    \"Address\":\"{{Address}}\",\r\n    \"UserName\":\"{{UserName}}\",\r\n    \"GroupName\":\"\",\r\n    \"GroupPlatformID\":\"\",\r\n    \"Properties\":\r\n    [\r\n      {\"Key\":\"Notes\", \"Value\":\"Test User for CyberArk\"},\r\n      {\"Key\":\"Ticket Number\", \"Value\":\"CHG100001\"},\r\n      {\"Key\":\"ParamName\", \"Value\":\"Parameter value\"}\r\n    ]\r\n  }\r\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Accounts",
										"{{AccountID}}"
									]
								},
								"description": "This method updates an existing account's details. In order to execute this web service, all the account’s details must be entered in the web service request. If the existing accounts properties are not sent as part of the request, the properties will be removed from the account. Any values sent in the request that were changed will be updated. All other properties values will remain the same.\r\nWhen you change the name or folder of a service account that has multiple dependencies (usages), the connection between it and its dependencies will be automatically maintained.\r\nIn addition, when you change the name or a folder of an account that is linked to another account, whether logon, reconciliation or verification, the links will be automatically updated.\r\nNotes:\r\nThis web service has the following limitations:\r\n- Dependencies (usages) cannot be updated.\r\n- Accounts that do not have a policy ID cannot be updated.\r\nPermissions\r\n- To update account properties, Safe members require the following permission:\r\n  - Update password properties\r\n- To rename accounts, Safe members require the following permission:\r\n  - Rename accounts\r\n- To move accounts to a different folder, Safe members require the following permission:\r\n  - Move accounts/folders"
							},
							"response": []
						},
						{
							"name": "Delete Account [v9.3+]",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Accounts",
										"{{AccountID}}"
									]
								},
								"description": "This method deletes a specific account in the Vault.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Delete accounts"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Account Actions",
					"item": [
						{
							"name": "v2 API",
							"item": [
								{
									"name": "Ad-Hoc Connect through PSM",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"UserName\":\"<User Name>\",\n\t\"Secret\":\"<password>\",\n\t\"Address\":\"<Address>\",\n\t\"PlatformId\":\"<Secure Connect Platform>\",\n\t\"extraFields\":{},\n\t\"PSMConnectPrerequisites\": {\n\t\t\"ConnectionComponent\":\"<Connection Component ID>\",\n\t\t\"ConnectionType\":\"<RDPFile or PSMGW>\"\n\t}\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Accounts/AdHocConnect",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Accounts",
												"AdHocConnect"
											]
										},
										"description": "This method allows you to connect through PSM without using an existing account, by returning settings that can be used with an RDP client application or for the HTML5 gateway.\n\nYou must enable Privileged Session Monitoring and ad-hoc connection via PVWA configuration. For more details, see [Ad Hoc Connections](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-Secure-Connect.htm)."
									},
									"response": []
								},
								{
									"name": "Change Password Immediately",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ChangeEntireGroup\" : true\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Change",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Change"
											]
										},
										"description": "This method marks an account for an immediate credentials change by the CPM to a new random value.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Change Password in the Vault Only",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ChangeEntireGroup\": false,\n\t\"NewCredentials\": \"<string>\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}/Password/Update",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Accounts",
												"{{AccountID}}",
												"Password",
												"Update"
											]
										},
										"description": "This method enables users to set account credentials and change them in the Vault. This will not affect credentials on the target device.\n\nThe user who runs this web service requires **Update password value** permission in the Safe where the privileged account is stored."
									},
									"response": []
								},
								{
									"name": "Change Password, Set Next Password",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ChangeImmediately\" : true,\n\t\"NewCredentials\": \"<credentials>\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/Accounts/{{AccountID}}/SetNextPassword",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"Accounts",
												"{{AccountID}}",
												"SetNextPassword"
											]
										},
										"description": "This method enables users to set the account's credentials to use for the next CPM change.\n\nThe user who runs this web service requires the following permissions in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations\n* Specify next password value"
									},
									"response": []
								},
								{
									"name": "Check In an Exclusive Account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/CheckIn",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"CheckIn"
											]
										},
										"description": "This method checks an exclusive account into the Vault.\n\n* If the account is managed automatically by the CPM, after it is checked in, the password is changed immediately.\n* If the account is managed manually, a notification is sent to a user who is authorized to change the password. The account is checked in automatically after it has been changed.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Connect Using PSM",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"type": "text",
												"value": "RDP",
												"key": "Accept"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"reason\":\"<Reason>\",\n\t\"TicketingSystemName\":\"<Ticketing system>\",\n\t\"TicketId\":\"<Ticketid>\",\n\t\"ConnectionComponent\":\"<Connection component id>\",\n\t\"ConnectionParams\": {\n\t\t\"<Connection parameter name>\": {\n\t\t\t\"value\":\"<Connection parameter value>\",\n\t\t\t\"ShouldSave\":<true\\false>\n\t\t},\n\t\t\"<Connection parameter name>\": {\n\t\t\t\"value\":\"<Connection parameter value>\",\n\t\t\t\"ShouldSave\":<true\\false>\n\t\t}\n\t}\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/PSMConnect",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"PSMConnect"
											]
										},
										"description": "This method enables you to connect to an account through PSM (PSMConnect) using a connection method defined in the PVWA.\n\nA response header defines which connection method is returned.\n\nFor more information, refer to [Privileged Session Management Interface](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-the-Privileged-Session-Management-Interface.htm).\n\n## Header Parameter\n\nParameter: Accept\n\nType: String\n\nDescription: The table below describes the expected response format depending on the value of the Accept header in the request, per connection method configuration (RDP File or PSM Gateway).\n\n| PVWA configuration | Optional values | Connection method |\n| --- | --- | --- |\n| RDP | application/json, application/octet-stream (default), `*/ *` | RDPFile (JSON), RDPFile (octet-stream raw) |\n| PSMGW | `* / *` | PSMGW (JSON) - Returns the HTML5 connection data. |\n\n**Note:** To use PSMGW, PSMGW must be configured before using this REST API in order to receive a PSMGW response."
									},
									"response": []
								},
								{
									"name": "Get Just in Time Access",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text"
											},
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}/grantAdministrativeAccess",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Accounts",
												"{{AccountID}}",
												"grantAdministrativeAccess"
											]
										},
										"description": "This method requests and receives access to a target Windows machine with administrative rights. The domain user who runs this web service will be added to the local Administrators group of the target machine.\n\n## Supported target machine environments\n\nJust in Time access is supported on the following end user machine environments:\n\n* Windows Server 2012/2012R2/2016\n* Windows 8, Windows 10\n\n## Configuration\n\nConfigure Just in Time access as described in [Configure Just in Time Access](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.3/en/Content/PASIMP/adhoc_access_admin.htm).\n\n## User permissions\n\nMake sure that all users who want to request access to the target Windows machine must have the following permission in the Safe:\n\n* List accounts"
									},
									"response": []
								},
								{
									"name": "Get Password Value",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"reason\":\"<Reason>\",\n\t\"TicketingSystemName\": \"<Ticketing system>\",\n\t\"TicketId\": \"<Ticketid>\",\n\t\"Version\": <version number>,\n\t\"ActionType\": \"<action type - show\\copy\\connect>\n\t\"isUse\": <true\\false>,\n\t\"Machine\": \"<my remote machine address>\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Accounts/{{AccountID}}/Password/Retrieve",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Accounts",
												"{{AccountID}}",
												"Password",
												"Retrieve"
											]
										},
										"description": "This method enables users to retrieve the password or SSH key of an existing account that is identified by its Account ID. It enables users to specify a reason and ticket ID, if required.\n\n**Note:** The ability to retrieve credentials using this REST API is intended for human use only and is not recommended for applications or automated processes, where application-based authentication is required.\n\nFor application or automated processes use cases, refer to the [AAM Credential Providers Online Help](https://docs.cyberark.com/Product-Doc/OnlineHelp/AAM-CP/Latest/en/Default.htm)."
									},
									"response": []
								},
								{
									"name": "Reconcile Password",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Reconcile",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Reconcile"
											]
										},
										"description": "This method marks an account for automatic reconciliation by the CPM.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Verify Password",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text"
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Verify",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Verify"
											]
										},
										"description": "This method marks an account for verification by the CPM, and can be used in versions from v9.10.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Change Password",
									"request": {
										"method": "PUT",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"ImmediateChangeByCPM\": <true/false>,\n\t\"ChangeCredsForGroup\": <true/false>\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/ChangeCredentials",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Accounts",
												"{{AccountID}}",
												"ChangeCredentials"
											]
										},
										"description": "This method marks the account for an immediate password change by the CPM to a new random password.\n\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\n\n* Initiate CPM password management operations"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "v1 API",
							"item": [
								{
									"name": "Get Account Value [v9.7-9.10]",
									"request": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/Credentials",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Accounts",
												"{{AccountID}}",
												"Credentials"
											]
										},
										"description": "This method enables users to retrieve the password of an existing account that is identified by its Account ID.\r\n- This web service will not return SSH Keys. If the request was sent for an SSH key, the following error will be returned: \"Failed to get the credentials of <AccountID>. Reason: The account is of type SSH Key.\"\r\n- This web service will not be able to retrieve the password if a reason is required (according to its effective Master Policy), and an error will be returned."
									},
									"response": []
								},
								{
									"name": "Get Password Value",
									"request": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/Credentials",
											"protocol": "https",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Accounts",
												"{{AccountID}}",
												"Credentials"
											]
										},
										"description": "This method enables users to retrieve the password of an existing account identified by its Account ID.\n\n* This web service will not return SSH Keys. If the request was sent for an SSK key, the following error will be returned: \"Failed to get the credentials of <AccountID>. Reason: The account is of type SSH Key.\"\n* This web service will not be able to retrieve the password if a reason is required (according to its effective Master Policy), and an error will be returned.\n\n**Note:** The ability to retrieve credentials using this REST API is intended for human use only and is not recommended for applications or automated processes where application-based authentication is required.\n\nFor application or automated processes use cases, refer to the [AAM Credential Providers Online Help](https://docs.cyberark.com/Product-Doc/OnlineHelp/AAM-CP/Latest/en/Default.htm)."
									},
									"response": []
								},
								{
									"name": "Change Credentials and Set Next Password [v10]",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ChangeImmediately\":\"true\",\n  \"NewCredentials\":\"Cyberark1\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/SetNextPassword",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"SetNextPassword"
											]
										},
										"description": "This method enables users to set the account's credentials to use for the next CPM change.\r\n\r\nThe user who runs this web service requires the following permissions in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations\r\n* Specify next password value"
									},
									"response": []
								},
								{
									"name": "Change Credentials Immediately [v9.10+]",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ChangeEntireGroup\":\"true\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Change",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Change"
											]
										},
										"description": "This method marks an account for an immediate credentials change by the CPM to a new random value.\r\n\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Change Credentials in the Vault [v10]",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ChangeCredsForGroup\":\"true\",\n  \"AutoGenerate\":\"true\",\n  \"NewCredentials\": \"\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Password/Update",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Password",
												"Update"
											]
										},
										"description": "This method enables users to set the account's credentials and change it in the Vault.\r\n\r\nThis will not affect the credentials on the target device.\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Update password value"
									},
									"response": []
								},
								{
									"name": "Reconcile Credentials [v9.10+]",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Reconcile",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Reconcile"
											]
										},
										"description": "This method marks an account for automatic reconciliation by the CPM.\r\n\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Verify Credentials [v9.10+]",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/Accounts/{{AccountID}}/Verify",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"Accounts",
												"{{AccountID}}",
												"Verify"
											]
										},
										"description": "This method marks an account for verification by the CPM, and can be used in versions from v9.10.\r\n\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations"
									},
									"response": []
								},
								{
									"name": "Verify Credentials [v9.7-v9.9.5]",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/VerifyCredentials",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Accounts",
												"{{AccountID}}",
												"VerifyCredentials"
											]
										},
										"description": "This method marks an account for verification by the CPM.\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n\r\n* Initiate CPM password management operations\r\n\r\n__This endpoint has been deprecated past v9.9.5__"
									},
									"response": []
								},
								{
									"name": "Change Credentials [v9.3+]",
									"request": {
										"method": "PUT",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "ImmediateChangeByCPM",
												"value": "Yes"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ChangeCredsForGroup\":\"No\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Accounts/{{AccountID}}/ChangeCredentials",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Accounts",
												"{{AccountID}}",
												"ChangeCredentials"
											]
										},
										"description": "This method marks the account for an immediate password change by the CPM to a new random password.\r\nThe user who runs this web service requires the following permission in the Safe where the privileged account is stored:\r\n- Initiate CPM password management operations\r\n\r\nNOTE: 'ImmediateChangeByCPM' is in the Web Services SDK as part of the body, but it should be included in the header as it is here."
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Account Groups",
					"item": [
						{
							"name": "Get Account Group by Safe",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/AccountGroups?Safe={{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"AccountGroups"
									],
									"query": [
										{
											"key": "Safe",
											"value": "{{Safe}}"
										}
									]
								},
								"description": "This method returns all the account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties\r\n* Create folders"
							},
							"response": []
						},
						{
							"name": "Get Account Group Members",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/AccountGroups/{{GroupName}}/Members",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"AccountGroups",
										"{{GroupName}}",
										"Members"
									]
								},
								"description": "This method returns all the members of an existing account group. These accounts can be either password accounts or SSH Key accounts.\n\n__NOTE: All members of account groups must be stored in the same Safe as the group itself.__\n\nThe user performing this task must have the following permissions in the Safe:\n\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders"
							},
							"response": []
						},
						{
							"name": "Add Account Group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"GroupName\":\"{{GroupName}}\",\r\n  \"GroupPlatform\":\"{{PlatformID}}\",\r\n  \"Safe\":\"{{Safe}}\"\r\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/API/AccountGroups/",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"API",
										"AccountGroups",
										""
									]
								},
								"description": "This method enables application managers to define a new account group automatically, and manage accounts as part of a group.\n\nTo create an account group, users require the following permissions in the Safe where the group is created:\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders\n\n**Note:** _The following characters are not supported in URL values in the Body:_ **+ & % #**"
							},
							"response": []
						},
						{
							"name": "Add Account to Account Group",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"AccountID\":\"{{AccountID}}\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/API/AccountGroups/{{GroupName}}/Members",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"API",
										"AccountGroups",
										"{{GroupName}}",
										"Members"
									]
								},
								"description": "This method adds an account as a member to an existing account group.  The account can contain either a password or SSH key.  All members of an account group must be stored in the same Safe as the group itself.\n\nTo add an account as a member to an account group, users require the following permissions to the Safe where the group is created:\n* Add accounts\n* Update account content\n* Update account properties\n\n**Note:** _The following characters are not support in URL values in the Body:_ **+ & % #**"
							},
							"response": []
						},
						{
							"name": "Delete Member from Account Group",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/AccountGroups/{{GroupName}}/Members/{{AccountID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"AccountGroups",
										"{{GroupName}}",
										"Members",
										"{{AccountID}}"
									]
								},
								"description": "This method removes an account member from an account group. This account can be either a password account or an SSH Key account.\r\n\r\nThe user performing this task must have the following permissions in the Safe:\r\n\r\n* Add accounts\r\n* Update account content\r\n* Update account properties\r\n* Create folders"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Bulk Upload of Accounts",
					"item": [
						{
							"name": "Get All Bulk Account Uploads for User",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/bulkactions/accounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"bulkactions",
										"accounts"
									],
									"query": [
										{
											"key": "filter",
											"value": "",
											"description": "status - returns all bulk account uploads that meet the required status",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "number of accounts to return, starting from first account",
											"disabled": true
										}
									]
								},
								"description": "This method gets the status of all bulk account uploads that the user performed.\n\n**Note:** Bulk account uploads are returned sorted by their creation time in descending order - from the most recent to the oldest. The bulk account uploads that are returned are ones that a specific user created and has authorization to view."
							},
							"response": []
						},
						{
							"name": "Get Bulk Account Upload Result",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/bulkactions/accounts/{{BulkID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"bulkactions",
										"accounts",
										"{{BulkID}}"
									]
								},
								"description": "This method returns the result of the bulk account upload, which is identified by the ID of the bulk account upload. When the upload has finished, the API returns the result. The result contains a list of all the accounts that succeeded or failed to upload.\n  \t\n\n**Note:** Only the user that created the bulk account upload can receive the result of the upload using this API."
							},
							"response": []
						},
						{
							"name": "Create Bulk Upload of Accounts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": \"filename.csv\",\n    \"accountsList\": [\n        {\n            \"uploadIndex\": \"1\",\n            \"username\": \"JohnDoe\",\n            \"address\": \"192.0.2.0\",\n            \"platformId\": \"WinDomain\",\n            \"safeName\": \"WinDomainSafe\",\n            \"secret\": \"123456\",\n            \"platformAccountProperties\": {\n                \"port\": \"111\"\n            },\n            \"secretManagement\": {\n                \"automaticManagementEnabled\": true,\n                \"manualManagementReason\": \"\"\n            },\n            \"remoteMachinesAccess\": {\n                \"accessRestrictedToRemoteMachines\": true,\n                \"remoteMachines\": \"example.com\"\n            },\n            \"groupName\": \"DomainGroup\"\n        },\n        {\n            \"uploadIndex\": \"2\",\n            \"username\": \"JaneDoe\",\n            \"address\": \"198.51.100.0\",\n            \"platformId\": \"WinDesktopLocal\",\n            \"safeName\": \"WinUsersSafe\",\n            \"secret\": \"123456\",\n            \"platformAccountProperties\": {\n                \"port\": \"222\"\n            },\n            \"secretManagement\": {\n                \"automaticManagementEnabled\": true,\n                \"manualManagementReason\": \"\"\n            },\n            \"remoteMachinesAccess\": {\n                \"accessRestrictedToRemoteMachines\": true,\n                \"remoteMachines\": \"example.net\"\n            },\n            \"groupName\": \"WinGroup\"\n        }\n    ]\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/bulkactions/accounts",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"bulkactions",
										"accounts"
									]
								},
								"description": "This method allows a developer to add multiple accounts to existing Safes. The response contains the ID of the bulk account upload that was performed.\n  \t\n**Note:** This option is only available if you have **Add accounts**, **Update account content**, and **Update account properties** authorization in at least one Safe."
							},
							"response": []
						}
					],
					"description": "This section includes three methods that enable you to perform a bulk upload of multiple accounts, and review the results.\n\nFirst, to add multiple accounts at one time to the system, use the Create bulk upload of accounts REST API.\n\nNext, to check the status of all the bulk account uploads that were performed by a user, use the Get all bulk account uploads for user REST API.\n\nLast, to review a summary of uploaded accounts and accounts that failed for a specific bulk upload, use the Get bulk account upload result REST API.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cc47166f-ea41-431e-9340-21563e3cb410",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0571425b-6272-46de-add8-3f47f7e53f6f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Discovered Accounts",
					"item": [
						{
							"name": "v2 API",
							"item": [
								{
									"name": "Get Discovered Account Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/DiscoveredAccounts/{{AccountID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"DiscoveredAccounts",
												"{{AccountID}}"
											]
										},
										"description": "This method returns information about a discovered account and its dependencies from the Pending Accounts list. The discovered account is identified by its ID.\n\nTo run this web service, the user must be a member of the Vault admins group.\n\n**Note:** Discovered accounts that were onboarded either manually or automatically, according to predefined rules, won't be returned using this method."
									},
									"response": []
								},
								{
									"name": "Get Discovered Accounts",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/DiscoveredAccounts?filter=platformType eq Windows Server Local AND privileged eq true AND accountEnabled eq true&search=admin&searchType=contains&offset=0&limit=100",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"DiscoveredAccounts"
											],
											"query": [
												{
													"key": "filter",
													"value": "platformType eq Windows Server Local AND privileged eq true AND accountEnabled eq true",
													"description": "search accounts using platformType, privileged, and/or accountEnabled values"
												},
												{
													"key": "search",
													"value": "admin",
													"description": "search is supported for username and address"
												},
												{
													"key": "searchType",
													"value": "contains",
													"description": "keyword is contained (contains, DEFAULT) or beginning (startswith)"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "the offset of the first returned account in the list of results"
												},
												{
													"key": "limit",
													"value": "100",
													"description": "the maximum number of accounts to return (maximum value allowed is 1000)"
												}
											]
										},
										"description": "This method returns a list of all the discovered accounts from the Pending Accounts list. To run this web service, the user must be a member of the Vault admins group.\n  \t\n**Note:** Discovered accounts that were onboarded either manually or automatically, according to predefined rules, won't be returned using this method.\n\nFor more information on available filters, please visit [Filter Parameters](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.6/en/Content/WebServices/Get-discovered-accounts.htm#filter-parameters) in the CyberArk API Documentation."
									},
									"response": []
								},
								{
									"name": "Add Discovered Accounts (v10.8+)",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"userName\": \"{{Username}}\",\n        \"address\": \"{{Address}}\",\n        \"platformTypeAccountProperties\": {\n            \"SID\": \"S-1-5-21-304654729-3147011263-1431158397-3154\"\n        },\n        \"accountEnabled\": true,\n        \"osGroups\": \"Backup Operators,IIS_IUSRS,Network Configuration Operators\",\n        \"platformType\": \"{{PlatformName}}\",\n        \"domain\": \"example.com\",\n        \"lastLogonDateTime\": \"1530635686\",\n        \"lastPasswordSetDateTime\": \"1530635786\",\n        \"passwordNeverExpires\": false,\n        \"osVersion\": \"Windows Server 2012 R2 Standard\",\n        \"privileged\": false,\n        \"userDisplayName\": \"User Display Name\",\n        \"description\": \"User Description\",\n        \"passwordExpirationDateTime\": \"1530645686\",\n        \"osFamily\": \"Server\",\n        \"OrganizationalUnit\": \"CN=Users,DC=example,DC=com\",\n        \"additionalProperties\": {\n            \"Port\": 445,\n            \"UserDN\": \"CN=user1,CN=Users,DC=example,DC=com\"\n        },\n        \"Dependencies\": [\n            {\n                \"name\": \"ServiceDep\",\n                \"address\": \"{{Address}}\",\n                \"type\": \"Windows Service\"\n            }\n        ]\n    },\n    {\n        \"userName\": \"amazon_accesskey_user\",\n        \"address\": \"aws.com\",\n        \"discoveryDate\": \"2018-05-03T13:00:00Z\",\n        \"platformType\": \"AWS Access Keys\",\n        \"privileged\": true,\n        \"platformTypeAccountProperties\": {\n            \"awsAccessKeyID\": \"ASASASASSA\",\n            \"awsAccountID\": \"123123123123\"\n        }\n    },\n    {\n        \"userName\": \"amazon_dashboard_user\",\n        \"address\": \"aws.com\",\n        \"discoveryDate\": \"2018-05-03T13:00:00Z\",\n        \"platformType\": \"AWS\",\n        \"privileged\": true,\n        \"platformTypeAccountProperties\": {\n            \"awsAccountID\": \"123123123123\"\n        }\n    },\n    {\n        \"userName\": string,\n        \"address\": string,\n        \"discoveryDate\": \"1530635689\",\n        \"platformType\": \"Azure Password Management\",\n        \"accountEnabled\": true,\n        \"privileged\": true,\n        \"privilegedCriteria\": string,\n        \"platformTypeAccountProperties\": {\n            \"activeDirectoryID\": string\n        }\n    }\n]",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/DiscoveredAccounts",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"DiscoveredAccounts"
											]
										},
										"description": "This method adds newly discovered accounts and their dependencies.\n\n| Action | Description |\n| --- | --- |\n| Discovered account | Discovered accounts are added to the Pending Accounts list. |\n| Discovered dependency | Discovered dependencies are added to the Pending Accounts list or are automatically added to the corresponding master account that has already been onboarded. |\n| Automatic onboarding | Discovered accounts are onboarded according to matching onboarding rules. If automatic onboarding fails for any reason, the account is added to the Pending Accounts list. |\n\nCurrently, Private SSH Keys are not supported.\n\nThe user who runs this web service requires the following users and permissions:\n\nTo add pending accounts:\n\n* **User:** Owner of PasswordManager_Pending Safe\n* **Permissions:**\n  * Add account\n  * List files\n  * Update account properties\n\nTo onboard the account:\n\n* **User:** Owner of the target Safe of the onboarding rule.\n* **Permissions:**\n  * Add account\n  * Update account properties\n  * Initiate CPM account management operations"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "v1 API",
							"item": [
								{
									"name": "Add Discovered Accounts (v10.5-v10.7)",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \n\t\"userName\":\"user_dd\",\n\t\"address\":\"win8.IT.com\",\n\t\"platformTypeAccountProperties\": {\n\t\t\"SID\":\"S-1-5-21-304654729-3147011263-1431158397-3154\"\n\t},\n\t\"accountEnabled\":true,\n\t\"osGroups\":\"Backup Operators,IIS_IUSRS,Network Configuration Operators\",\n\t\"platformType\":\"Windows Server Local\",\n\t\"domain\":\"MyDomain.com\",\n\t\"lastLogonDateTime\":\"1530635686\",\n\t\"lastPasswordSetDateTime\":\"1530635686\",\n\t\"passwordNeverExpires\":false,\n\t\"osVersion\":\"Windows Server 2012 R2 Standard\",\n\t\"privileged\":false,\n\t\"userDisplayName\":\"User Display Name\",\n\t\"description\":\"User Description\",\n\t\"passwordExpirationDateTime\":\"1530635686\",\n\t\"osFamily\":\"Server\",\n\t\"OrganizationalUnit\":\"CN=WINSERVER, OU=QA testing,DC=IT,DC=com\",\n\t\"additionalProperties\": {\n\t\t\"Port\":445,\n\t\t\"UserDN\":\"CN=user1,CN=Users,DC=example,DC=com\"\n\t}\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/DiscoveredAccounts",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"DiscoveredAccounts"
											]
										},
										"description": "This RPC service adds newly discovered accounts.\n\nThe discovered account is onboarded according to matching onboarding rules or added directly to the Pending Accounts list.\n\nIf the account already exists in the Pending Account list, it will be updated as needed.\n\nIf onboarding failed for any reason, the account will be added to the Pending Accounts list.\n\nThe user who runs this web service requires the following users and permissions:\n\nTo add pending accounts:\n\n* **User:** Owner of PasswordManager_Pending Safe\n* **Permissions:**\n  * Add account\n  * Update account properties\n\nTo onboard the account:\n\n* **User:** Owner of the target Safe of the onboarding rule.\n* **Permissions:**\n  * Add account\n  * Update account properties\n  * Initiate CPM account management operations"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"description": "This section includes REST APIs for discovered accounts. ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "78226631-bf3f-42bd-b634-40185597e88b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1cd95e05-8b26-4ce4-bd42-650cd0de7e9f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Applications",
			"item": [
				{
					"name": "List Applications",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"disabled": true
							},
							{
								"value": "application/json",
								"key": "Content-Type",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Applications/?Location=\\&IncludeSublocations=true",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Applications",
								""
							],
							"query": [
								{
									"key": "Location",
									"value": "\\"
								},
								{
									"key": "IncludeSublocations",
									"value": "true"
								}
							]
						},
						"description": "This method returns a list of all the applications in the Vault.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Audit Users"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"disabled": true
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:25:20 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1532"
								}
							],
							"cookie": [],
							"body": "{\n    \"application\": [\n        {\n            \"AccessPermittedFrom\": 0,\n            \"AccessPermittedTo\": 24,\n            \"AllowExtendedAuthenticationRestrictions\": false,\n            \"AppID\": \"Account-Factory\",\n            \"BusinessOwnerEmail\": \"\",\n            \"BusinessOwnerFName\": \"\",\n            \"BusinessOwnerLName\": \"\",\n            \"BusinessOwnerPhone\": \"\",\n            \"Description\": \"\",\n            \"Disabled\": false,\n            \"ExpirationDate\": null,\n            \"Location\": \"\\\\\"\n        },\n        {\n            \"AccessPermittedFrom\": 0,\n            \"AccessPermittedTo\": 24,\n            \"AllowExtendedAuthenticationRestrictions\": false,\n            \"AppID\": \"Ansible\",\n            \"BusinessOwnerEmail\": \"joe.garcia@cyberark.com\",\n            \"BusinessOwnerFName\": \"Joe\",\n            \"BusinessOwnerLName\": \"Garcia\",\n            \"BusinessOwnerPhone\": \"222-UWISHUKNEW\",\n            \"Description\": \"Identity assigned to all Ansible retrieved credentials for audit.\",\n            \"Disabled\": false,\n            \"ExpirationDate\": null,\n            \"Location\": \"\\\\Applications\"\n        },\n        {\n            \"AccessPermittedFrom\": 0,\n            \"AccessPermittedTo\": 24,\n            \"AllowExtendedAuthenticationRestrictions\": false,\n            \"AppID\": \"AIMWebService\",\n            \"BusinessOwnerEmail\": \"joe.garcia@cyberark.com\",\n            \"BusinessOwnerFName\": \"Joe\",\n            \"BusinessOwnerLName\": \"Garcia\",\n            \"BusinessOwnerPhone\": \"222-UWISHUKNEW\",\n            \"Description\": \"Defining MFA for AIM Central Credential Provider\",\n            \"Disabled\": false,\n            \"ExpirationDate\": null,\n            \"Location\": \"\\\\Applications\"\n        },\n        {\n            \"AccessPermittedFrom\": 0,\n            \"AccessPermittedTo\": 24,\n            \"AllowExtendedAuthenticationRestrictions\": false,\n            \"AppID\": \"HelloWorldPHP\",\n            \"BusinessOwnerEmail\": \"joe.garcia@cyberark.com\",\n            \"BusinessOwnerFName\": \"Joe\",\n            \"BusinessOwnerLName\": \"Garcia\",\n            \"BusinessOwnerPhone\": \"222-UWISHUKNEW\",\n            \"Description\": \"Application ID for Hello World PHP script deployed automatically by Ansible.\",\n            \"Disabled\": false,\n            \"ExpirationDate\": null,\n            \"Location\": \"\\\\Applications\"\n        }\n    ]\n}"
						},
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"disabled": true
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Content-Length",
									"value": "771"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 05 Jun 2017 18:49:26 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": ""
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": ""
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": ""
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": ""
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": "Desktop"
								}
							],
							"body": "{\n  \"application\": [\n    {\n      \"AccessPermittedFrom\": 0,\n      \"AccessPermittedTo\": 24,\n      \"AllowExtendedAuthenticationRestrictions\": false,\n      \"AppID\": \"AIMWebService\",\n      \"BusinessOwnerEmail\": \"\",\n      \"BusinessOwnerFName\": \"\",\n      \"BusinessOwnerLName\": \"\",\n      \"BusinessOwnerPhone\": \"\",\n      \"Description\": \"This application is for the web service installed for the Central Credential Provider.\",\n      \"Disabled\": false,\n      \"ExpirationDate\": null,\n      \"Location\": \"\\\\\"\n    },\n    {\n      \"AccessPermittedFrom\": 0,\n      \"AccessPermittedTo\": 24,\n      \"AllowExtendedAuthenticationRestrictions\": false,\n      \"AppID\": \"RESTExamples\",\n      \"BusinessOwnerEmail\": \"john.doe@cyberark.com\",\n      \"BusinessOwnerFName\": \"John\",\n      \"BusinessOwnerLName\": \"Doe\",\n      \"BusinessOwnerPhone\": \"555-555-1212\",\n      \"Description\": \"AppID for all AIM and REST Examples\",\n      \"Disabled\": false,\n      \"ExpirationDate\": null,\n      \"Location\": \"\\\\Applications\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "List a Specific Application",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Applications/?AppID={{AppID}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Applications",
								""
							],
							"query": [
								{
									"key": "AppID",
									"value": "{{AppID}}"
								}
							]
						},
						"description": "This method returns information about a specific application.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Audit Users"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"disabled": true
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:25:46 GMT"
								},
								{
									"key": "Content-Length",
									"value": "423"
								}
							],
							"cookie": [],
							"body": "{\n    \"application\": [\n        {\n            \"AccessPermittedFrom\": 0,\n            \"AccessPermittedTo\": 24,\n            \"AllowExtendedAuthenticationRestrictions\": false,\n            \"AppID\": \"Ansible\",\n            \"BusinessOwnerEmail\": \"joe.garcia@cyberark.com\",\n            \"BusinessOwnerFName\": \"Joe\",\n            \"BusinessOwnerLName\": \"Garcia\",\n            \"BusinessOwnerPhone\": \"222-UWISHUKNEW\",\n            \"Description\": \"Identity assigned to all Ansible retrieved credentials for audit.\",\n            \"Disabled\": false,\n            \"ExpirationDate\": null,\n            \"Location\": \"\\\\Applications\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List all Authentication Methods of a Specific Application",
					"request": {
						"method": "GET",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Applications/{{AppID}}/Authentications",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Applications",
								"{{AppID}}",
								"Authentications"
							]
						},
						"description": "This method returns information about all the authentications methods of a specific application.\r\nThe user who runs this web service requires the following permission in the Vault:\r\n- Audit Users"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"disabled": true
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:26:06 GMT"
								},
								{
									"key": "Content-Length",
									"value": "472"
								}
							],
							"cookie": [],
							"body": "{\n    \"authentication\": [\n        {\n            \"AllowInternalScripts\": null,\n            \"AppID\": \"Ansible\",\n            \"AuthType\": \"machineAddress\",\n            \"AuthValue\": \"ansible.192.168.3.103.xip.io\",\n            \"Comment\": null,\n            \"IsFolder\": null,\n            \"authID\": 1\n        },\n        {\n            \"AllowInternalScripts\": null,\n            \"AppID\": \"Ansible\",\n            \"AuthType\": \"machineAddress\",\n            \"AuthValue\": \"192.168.3.103\",\n            \"Comment\": null,\n            \"IsFolder\": null,\n            \"authID\": 2\n        },\n        {\n            \"AllowInternalScripts\": null,\n            \"AppID\": \"Ansible\",\n            \"AuthType\": \"machineAddress\",\n            \"AuthValue\": \"ansibletower\",\n            \"Comment\": null,\n            \"IsFolder\": null,\n            \"authID\": 3\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add Application",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"application\":\r\n  {\r\n    \"AppID\":\"{{AppID}}\",\r\n    \"Description\":\"Testing DevOps Deployments with CyberArk\",\r\n    \"Location\":\"/Applications\",\r\n    \"AccessPermittedFrom\":0,\r\n    \"AccessPermittedTo\":23,\r\n    \"ExpirationDate\":\"\",\r\n    \"Disabled\":\"No\",\r\n    \"BusinessOwnerFName\":\"John\",\r\n    \"BusinessOwnerLName\":\"Doe\",\r\n    \"BusinessOwnerEmail\":\"John.Doe@CyberArk.com\",\r\n    \"BusinessOwnerPhone\":\"555-555-1212\"\r\n  }\r\n}",
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Applications/",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Applications",
								""
							]
						},
						"description": "This method adds a new application to the Vault.\r\nThe user who adds this application requires the following permission in the Vault:\r\n- Manage Users"
					},
					"response": [
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"application\":\r\n  {\r\n    \"AppID\":\"{{AppID}}2\",\r\n    \"Description\":\"Testing DevOps Deployments with CyberArk\",\r\n    \"Location\":\"/Applications\",\r\n    \"AccessPermittedFrom\":0,\r\n    \"AccessPermittedTo\":23,\r\n    \"ExpirationDate\":\"\",\r\n    \"Disabled\":\"No\",\r\n    \"BusinessOwnerFName\":\"John\",\r\n    \"BusinessOwnerLName\":\"Doe\",\r\n    \"BusinessOwnerEmail\":\"John.Doe@CyberArk.com\",\r\n    \"BusinessOwnerPhone\":\"555-555-1212\"\r\n  }\r\n}"
								},
								"url": {
									"raw": ""
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Content-Length",
									"value": "1647"
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Date",
									"value": "Mon, 05 Jun 2017 18:46:42 GMT"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/8.5"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; HttpOnly"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								}
							],
							"cookie": [
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": ""
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": ""
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": ""
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": ""
								},
								{
									"expires": "Invalid Date",
									"hostOnly": false,
									"httpOnly": true,
									"domain": "components.joe-garcia.local",
									"path": "/PasswordVault/",
									"secure": false,
									"session": false,
									"value": "Desktop"
								}
							],
							"body": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n  <head>\r\n    <title>Request Error</title>\r\n    <style>BODY { color: #000000; background-color: white; font-family: Verdana; margin-left: 0px; margin-top: 0px; } #content { margin-left: 30px; font-size: .70em; padding-bottom: 2em; } A:link { color: #336699; font-weight: bold; text-decoration: underline; } A:visited { color: #6699cc; font-weight: bold; text-decoration: underline; } A:active { color: #336699; font-weight: bold; text-decoration: underline; } .heading1 { background-color: #003366; border-bottom: #336699 6px solid; color: #ffffff; font-family: Tahoma; font-size: 26px; font-weight: normal;margin: 0em 0em 10px -20px; padding-bottom: 8px; padding-left: 30px;padding-top: 16px;} pre { font-size:small; background-color: #e5e5cc; padding: 5px; font-family: Courier New; margin-top: 0px; border: 1px #f0f0e0 solid; white-space: pre-wrap; white-space: -pre-wrap; word-wrap: break-word; } table { border-collapse: collapse; border-spacing: 0px; font-family: Verdana;} table th { border-right: 2px white solid; border-bottom: 2px white solid; font-weight: bold; background-color: #cecf9c;} table td { border-right: 2px white solid; border-bottom: 2px white solid; background-color: #e5e5cc;}</style>\r\n  </head>\r\n  <body>\r\n    <div id=\"content\">\r\n      <p class=\"heading1\">Request Error</p>\r\n      <p>The server encountered an error processing the request. See server logs for more details.</p>\r\n    </div>\r\n  </body>\r\n</html>"
						}
					]
				},
				{
					"name": "Add Authentication",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"authentication\":\r\n  {\r\n    \"AuthType\":\"path/osuser/hash/machineAddress\",\r\n    \"AuthValue\":\"<Path string>/<OSUser Name>/<Hash Value>/<Machine Address/CIDR>\",\r\n    \"IsFolder\":<true/false>,\r\n    \"AllowInternalScripts\":<true/false>\r\n  }\r\n}",
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Applications/{{AppID}}/Authentications/",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Applications",
								"{{AppID}}",
								"Authentications",
								""
							]
						},
						"description": "This method adds a new authentication method to a specific application in the Vault.\r\nThe user who adds this authentication method requires the following permissions in the Vault:\r\n- Manage Users"
					},
					"response": []
				},
				{
					"name": "Delete a Specific Application",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Applications/?AppID={{AppID}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Applications",
								""
							],
							"query": [
								{
									"key": "AppID",
									"value": "{{AppID}}"
								}
							]
						},
						"description": "This method deletes a specific application.\r\nThe user requires the following permission in the Vault:\r\n- Manage Users"
					},
					"response": []
				},
				{
					"name": "Delete a Specific Authentication",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Applications/{{AppID}}/Authentications/?AuthID=1",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Applications",
								"{{AppID}}",
								"Authentications",
								""
							],
							"query": [
								{
									"key": "AuthID",
									"value": "1"
								}
							]
						},
						"description": "This method deletes a specific authentication method from a defined application.\r\nThe user requires the following permission in the Vault:\r\n- Manage Users"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "v2 API",
					"item": [
						{
							"name": "SAML Authentication",
							"item": [
								{
									"name": "Logon",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b27fc244-aacc-4b71-a6a0-549e6275bfc8",
												"exec": [
													"function stripEndQuotes(s){",
													"\tvar t=s.length;",
													"\tif (s.charAt(0)=='\"') s=s.substring(1,t--);",
													"\tif (s.charAt(--t)=='\"') s=s.substring(0,t);",
													"\treturn s;",
													"}",
													"var jsonData = JSON.parse(responseBody);",
													"str=stripEndQuotes(jsonData);",
													"postman.setEnvironmentVariable(\"CyberArkLogonResult\", str);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/API/auth/SAML/Logon?concurrentSession=false&apiUse=true&SAMLResponse={{SAMLToken}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"API",
												"auth",
												"SAML",
												"Logon"
											],
											"query": [
												{
													"key": "concurrentSession",
													"value": "false",
													"description": "Boolean value"
												},
												{
													"key": "apiUse",
													"value": "true",
													"description": "Never should be false"
												},
												{
													"key": "SAMLResponse",
													"value": "{{SAMLToken}}"
												}
											]
										},
										"description": "This method authenticates a user to the Vault using SAML authentication and returns a token that can be used in subsequent web services calls.\n\n[Example PowerShell Code is available here](https://gist.github.com/infamousjoeg/b44faa299ec3de65bdd1d3b8474b0649)"
									},
									"response": []
								},
								{
									"name": "Logoff",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"value": "{{SAMLToken}}",
												"type": "text",
												"key": "Authorization"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/auth/SAML/Logoff",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"auth",
												"SAML",
												"Logoff"
											]
										},
										"description": "This method logs off the user and removes the Vault session. This web service is used to log off when the user authenticated with SAML authentication."
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Logon - CyberArk Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cc5f2997-8696-452a-baea-8a2a31e9f980",
										"exec": [
											"function stripEndQuotes(s){",
											"\tvar t=s.length;",
											"\tif (s.charAt(0)=='\"') s=s.substring(1,t--);",
											"\tif (s.charAt(--t)=='\"') s=s.substring(0,t);",
											"\treturn s;",
											"}",
											"var jsonData = JSON.parse(responseBody);",
											"str=stripEndQuotes(jsonData);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", str);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\",\n\t\"newPassword\": \"<optional>\",\n\t\"concurrentSession\": \"false\" // v11.3\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Auth/CyberArk/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Auth",
										"CyberArk",
										"Logon"
									]
								},
								"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method enables you to set a new password."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\"\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000028C15398FB1A562CD1D4E91A6FA81FC6A06554E484D00D985DD8ED45237FD32F500000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=C78EA53FF658A303; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 20:50:14 GMT"
										},
										{
											"key": "Content-Length",
											"value": "182"
										}
									],
									"cookie": [],
									"body": "\"OTc5NjZlZDUtZDY0YS00N2RmLThiNjYtM2FhMWE5YzMwMWEwO0M3OEVBNTNGRjY1OEEzMDM7MDAwMDAwMDI4QzE1Mzk4RkIxQTU2MkNEMUQ0RTkxQTZGQTgxRkM2QTA2NTU0RTQ4NEQwMEQ5ODVERDhFRDQ1MjM3RkQzMkY1MDAwMDAwMDA7\""
								}
							]
						},
						{
							"name": "Logon - LDAP Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "992886de-ef2c-4073-99b6-8a8e115953c7",
										"exec": [
											"function stripEndQuotes(s){",
											"\tvar t=s.length;",
											"\tif (s.charAt(0)=='\"') s=s.substring(1,t--);",
											"\tif (s.charAt(--t)=='\"') s=s.substring(0,t);",
											"\treturn s;",
											"}",
											"var jsonData = JSON.parse(responseBody);",
											"str=stripEndQuotes(jsonData);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", str);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\",\n\t\"newPassword\": \"<optional>\",\n\t\"concurrentSession\": \"false\" // v11.3\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Auth/LDAP/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Auth",
										"LDAP",
										"Logon"
									]
								},
								"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method enables you to set a new password."
							},
							"response": []
						},
						{
							"name": "Logon - RADIUS Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b6857eb0-2e9b-4a9e-ae2b-8d889400c091",
										"exec": [
											"function stripEndQuotes(s){",
											"\tvar t=s.length;",
											"\tif (s.charAt(0)=='\"') s=s.substring(1,t--);",
											"\tif (s.charAt(--t)=='\"') s=s.substring(0,t);",
											"\treturn s;",
											"}",
											"var jsonData = JSON.parse(responseBody);",
											"str=stripEndQuotes(jsonData);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", str);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Username\": \"{{apiUsername}}\",\n\t\"Password\": \"{{apiPassword}}\",\n\t\"concurrentSessions\": \"false\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Auth/radius/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Auth",
										"radius",
										"Logon"
									]
								},
								"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method enables you to set a new password."
							},
							"response": []
						},
						{
							"name": "Logon - Windows Authentication",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c41e12e7-f022-4add-bf4f-d054f5bfa0fe",
										"exec": [
											"function stripEndQuotes(s){",
											"\tvar t=s.length;",
											"\tif (s.charAt(0)=='\"') s=s.substring(1,t--);",
											"\tif (s.charAt(--t)=='\"') s=s.substring(0,t);",
											"\treturn s;",
											"}",
											"var jsonData = JSON.parse(responseBody);",
											"str=stripEndQuotes(jsonData);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", str);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\",\n\t\"concurrentSessions\": \"false\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/auth/Windows/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"auth",
										"Windows",
										"Logon"
									]
								},
								"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method enables you to set a new password."
							},
							"response": []
						},
						{
							"name": "Logoff",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Auth/Logoff",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Auth",
										"Logoff"
									]
								},
								"description": "This method logs off the user and removes the Vault session."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"disabled": true
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=3FC0264AE21891C9; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000028E20E4D1937817AB97347D6362F0C46DC68838CDEAD5CB4CB730327CAC57DB7300000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 20:51:24 GMT"
										},
										{
											"key": "Content-Length",
											"value": "16"
										}
									],
									"cookie": [],
									"body": "{\n    \"LogoffUrl\": \"\"\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "v1 API",
					"item": [
						{
							"name": "Logon",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0def5076-754a-4f12-b427-3b4b90ec04e1",
										"exec": [
											"function stripEndQuotes(s){",
											"\tvar t=s.length;",
											"\tif (s.charAt(0)=='\"') s=s.substring(1,t--);",
											"\tif (s.charAt(--t)=='\"') s=s.substring(0,t);",
											"\treturn s;",
											"}",
											"var jsonData = JSON.parse(responseBody);",
											"str=stripEndQuotes(jsonData);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", str);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"{{apiUsername}}\",\n\t\"password\": \"{{apiPassword}}\",\n\t\"connectionNumber\": \"1\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/auth/Cyberark/CyberArkAuthenticationService.svc/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"auth",
										"Cyberark",
										"CyberArkAuthenticationService.svc",
										"Logon"
									]
								},
								"description": "This method authenticates a user to the Vault and returns a token that can be used in subsequent web services calls. In addition, this method allows you to set a new password.\n\nUsers can authenticate using CyberArk, LDAP or RADIUS authentication."
							},
							"response": []
						},
						{
							"name": "Logoff",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/auth/Cyberark/CyberArkAuthenticationService.svc/Logoff",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"auth",
										"Cyberark",
										"CyberArkAuthenticationService.svc",
										"Logoff"
									]
								},
								"description": "This method logs off the user and removes the Vault session."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Shared Logon Authentication",
					"item": [
						{
							"name": "Logon",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ba924a3e-cc30-478b-9cab-935b0205ebf4",
										"exec": [
											"function stripEndQuotes(s){",
											"\tvar t=s.length;",
											"\tif (s.charAt(0)=='\"') s=s.substring(1,t--);",
											"\tif (s.charAt(--t)=='\"') s=s.substring(0,t);",
											"\treturn s;",
											"}",
											"var jsonData = JSON.parse(responseBody);",
											"str=stripEndQuotes(jsonData);",
											"postman.setEnvironmentVariable(\"CyberArkLogonResult\", str);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logon",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"auth",
										"Shared",
										"RestfulAuthenticationService.svc",
										"Logon"
									]
								},
								"description": "Shared authentication is based on a user credential file that is stored in the PVWA web server. During shared authentication, only the user defined in the credential file can log on to the PVWA, but multiple users can use the logon token.\n\nThis type of authentication **requires** the application using the REST services to manage the users as the Vault can't identify which specific user performs each action.\n\nMultiple concurrent connections can be created using the same token, without affecting each other.\n\nThe shared user is defined in a user credential file, whose location is specified in the WSCredentialFile parameter, in the appsettings section of the PVWAweb.config file:\n\n```\n<add key=\"WSCredentialFile\" value=\"C:\\CyberArk\\Password Vault Web Access\\CredFiles\\WSUser.ini\"/>\n```\n\n* Make sure that this user can access the PVWA interface.\n* Make sure the user only has the permissions in the Vault that they require.\n\nFor information about securing communication when using the SDK, refer to the following:\n\n* [Securing application-to-REST communication](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/SDK/Securing%20Communication.htm)\n* [Configuring client authentication via certificates](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/SDK/Configuring%20Client%20Authentication%20via%20Client%20Certificates.htm)\n\nThis method authenticates to the Vault with a shared webservices user and returns a token that will be used in subsequent web services calls.\n\nThis is supported for CyberArk authentication only, and not for third party authentication."
							},
							"response": []
						},
						{
							"name": "Logoff",
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									},
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/auth/Shared/RestfulAuthenticationService.svc/Logoff",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"auth",
										"Shared",
										"RestfulAuthenticationService.svc",
										"Logoff"
									]
								},
								"description": "This method logs off the shared user and removes the Vault session."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Authentication Methods Config",
					"item": [
						{
							"name": "Get Specific Authentication Method",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods/{{authID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods",
										"{{authID}}"
									]
								},
								"description": "This method returns a specific authentication method. Any user who is a member of the Vault Admins group can run this web service."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods/{{authID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"AuthenticationMethods",
												"{{authID}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "288"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=7E8A61F4E4D93A92; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000026D4CE685405C9F6384A1470D20CF85E65CD2B6F87C6293EC75EFE7FEB204632700000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Sep 2020 00:45:20 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": \"saml\",\n    \"displayName\": \"IDaptive SAML\",\n    \"enabled\": true,\n    \"mobileEnabled\": false,\n    \"logoffUrl\": \"https://tenantid.my.idaptive.app/applogout/appkey/acredacted/customerid/redacted\",\n    \"secondFactorAuth\": null,\n    \"signInLabel\": \"\",\n    \"usernameFieldLabel\": \"\",\n    \"passwordFieldLabel\": \"\"\n}"
								}
							]
						},
						{
							"name": "Get Authentication Methods",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods"
									]
								},
								"description": "This method returns a list of all existing authentication methods. Any user who is a member of the Vault admins group can run this web service."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Configuration",
												"AuthenticationMethods"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "1674"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=7E8A61F4E4D93A92; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000026D4CE685405C9F6384A1470D20CF85E65CD2B6F87C6293EC75EFE7FEB204632700000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Thu, 24 Sep 2020 00:43:30 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"Methods\": [\n        {\n            \"id\": \"windows\",\n            \"displayName\": \"\",\n            \"enabled\": false,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"pki\",\n            \"displayName\": \"\",\n            \"enabled\": false,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"cyberark\",\n            \"displayName\": \"\",\n            \"enabled\": true,\n            \"mobileEnabled\": true,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": \"cyberark\",\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"oraclesso\",\n            \"displayName\": \"\",\n            \"enabled\": false,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"http://[ssoserver]:7777/sso/logout?p_done_url=http://[iisserver]/PasswordVault\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"rsa\",\n            \"displayName\": \"\",\n            \"enabled\": false,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"/WebID/IISWebAgentIF.dll?logoff?referrer=/passwordvault\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"radius\",\n            \"displayName\": \"Duo (RADIUS)\",\n            \"enabled\": true,\n            \"mobileEnabled\": true,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": \"radius\",\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"ldap\",\n            \"displayName\": \"\",\n            \"enabled\": true,\n            \"mobileEnabled\": true,\n            \"logoffUrl\": \"\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        },\n        {\n            \"id\": \"saml\",\n            \"displayName\": \"IDaptive SAML\",\n            \"enabled\": true,\n            \"mobileEnabled\": false,\n            \"logoffUrl\": \"https://tentantid.my.idaptive.app/applogout/appkey/acredacted/customerid/redacted\",\n            \"secondFactorAuth\": null,\n            \"signInLabel\": \"\",\n            \"usernameFieldLabel\": \"\",\n            \"passwordFieldLabel\": \"\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add Authentication Method",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"saml\",\n    \"displayName\": \"IDaptive SAML\",\n    \"enabled\": true,\n    \"mobileEnabled\": false,\n    \"logoffUrl\": \"https://domain.com/idp/logoff\",\n    \"secondFactorAuth\": null,\n    \"signInLabel\": \"\",\n    \"usernameFieldLabel\": \"\",\n    \"passwordFieldLabel\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods"
									]
								},
								"description": "This method adds a new authentication method. Any user who is a member of the Vault admins group can run this web service."
							},
							"response": []
						},
						{
							"name": "Update Authentication Method",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"displayName\": \"\",\n    \"enabled\": true,\n    \"mobileEnabled\": false,\n    \"logoffUrl\": \"https://domain.com/idp/logoff\",\n    \"secondFactorAuth\": null,\n    \"signInLabel\": \"\",\n    \"usernameFieldLabel\": \"\",\n    \"passwordFieldLabel\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/AuthenticationMethods/{{authID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"AuthenticationMethods",
										"{{authID}}"
									]
								},
								"description": "This method updates the properties for a specific authentication method. Any user who is a member of the Vault admins group can run this web service."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for configuring and managing authentication methods.",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"script": {
						"id": "41b0e876-075d-45ea-b3a0-0a35bbbc4442",
						"exec": [
							""
						],
						"type": "text/javascript"
					},
					"disabled": false,
					"listen": "prerequest"
				},
				{
					"disabled": false,
					"script": {
						"id": "451fd63a-7b46-4a08-8b2d-3a30ec15be8f",
						"type": "text/javascript",
						"exec": [
							""
						]
					},
					"listen": "test"
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Central Credential Provider (CCP)",
			"item": [
				{
					"name": "GetPassword",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"type": "text",
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/AIMWebService/api/Accounts?AppID={{AppID}}&Safe={{Safe}}&Object={{ObjectName}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"AIMWebService",
								"api",
								"Accounts"
							],
							"query": [
								{
									"key": "AppID",
									"value": "{{AppID}}"
								},
								{
									"key": "Safe",
									"value": "{{Safe}}"
								},
								{
									"key": "Object",
									"value": "{{ObjectName}}"
								},
								{
									"key": "Username",
									"value": "{{UserName}}",
									"disabled": true
								}
							]
						},
						"description": "GetPassword – This service enables applications to retrieve passwords from the\r\nCentral Credential Provider.\r\n\r\n- AppID (REQUIRED)\r\n  - Specifies the unique ID of the application issuing the password request.\r\n- Safe\r\n  - Specifies the name of the Safe where the password is stored.\r\n- Folder\r\n  - Specifies the name of the folder where the password is stored. (Default: Root)\r\n- Object\r\n  - Specifies the name of the password object to retrieve.\r\n- UserName\r\n  - Defines search criteria according to the UserName account property.\r\n- Address\r\n  - Defines search criteria according to the Address account property.\r\n- Database\r\n  - Defines search criteria according to the Database account property.\r\n- PolicyID\r\n  - Defines the format that will be used in the setPolicyID method.\r\n- Reason\r\n  - The reason for retrieving the password.  This reason will be audited in the Credential Provider audit log.\r\n- ConnectionTimeout\r\n  - The number of seconds that the Central Credential Provider will try to retrieve the password.  The timeout is calculated when the request is sent from the web service to the Vault and returned back to the web service.\r\n    - 30 (Default)\r\n- Query\r\n  - Defines a free query using account properties, including Safe, folder, and object.  When this method is specified, all other search criteria (Safe/Folder/Object/UserName/Address/PolicyID/Database) are ignored and only the account properties that are specified in the query are passed to the Central Credential Provider in the password request.\r\n- QueryFormat\r\n  - Defines the query format, which can optionally use regular expressions.\r\n  - Possible values are:\r\n    - Exact (Default)\r\n    - Regexp\r\n- FailedRequestOnPasswordChange\r\n  - Whether or not an error will be returned if this web service is called when a password change process is underway.\r\n    - True\r\n    - False (Default)"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "General",
			"item": [
				{
					"name": "Add Allowed Referrer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"description": "Session Authorization Token"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"referrerURL\": \"https://CompanyA/portal/\",\n    \"regularExpression\": false\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/passwordvault/api/Configuration/AccessRestriction/AllowedReferrers",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"passwordvault",
								"api",
								"Configuration",
								"AccessRestriction",
								"AllowedReferrers"
							]
						},
						"description": "This method adds a web application URL to the allowed referrer list. This means access is allowed from the URL to the PVWA. Any user who is a member of the Vault admins group can run this web service."
					},
					"response": []
				},
				{
					"name": "Get Allowed Referrer",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"description": "Session Authorization Token"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/passwordvault/api/Configuration/AccessRestriction/AllowedReferrers",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"passwordvault",
								"api",
								"Configuration",
								"AccessRestriction",
								"AllowedReferrers"
							]
						},
						"description": "This method returns the allowed referrer list. This means access is allowed from all URLs in the list, to the PVWA. Any user who is a member of the Vault admins group can run this web service."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/Configuration/AccessRestriction/AllowedReferrers",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"Configuration",
										"AccessRestriction",
										"AllowedReferrers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache,no-cache"
								},
								{
									"key": "Content-Length",
									"value": "129"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=3159600;includeSubdomains;"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Date",
									"value": "Fri, 25 Sep 2020 15:51:56 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"referrerURL\": \"/WebID/\",\n        \"regularExpression\": false\n    },\n    {\n        \"referrerURL\": \"https://tenantid.my.idaptive.app\",\n        \"regularExpression\": false\n    }\n]"
						}
					]
				}
			],
			"description": "This section includes general APIs.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6a2e3a1d-e141-4713-a59f-662c98233136",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e77c7043-4eda-4625-8127-02685c3aaa8b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "LDAP Integration",
			"item": [
				{
					"name": "LDAP Directories",
					"item": [
						{
							"name": "Get Directories",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories"
									]
								},
								"description": "This method returns a list of existing directories in the Vault. Each directory will be returned with its own data.\n\nTo run this web service, the user must be a member of the Vault Admins group."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:24:35 GMT"
										},
										{
											"key": "Content-Length",
											"value": "80"
										}
									],
									"cookie": [],
									"body": "[\n    {\n        \"DomainName\": \"cyberarkdemo.com\",\n        \"DomainBaseContext\": \"DC=cyberarkdemo,DC=com\"\n    }\n]"
								}
							]
						},
						{
							"name": "Get Directory Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories/{{LDAPID}}/",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories",
										"{{LDAPID}}",
										""
									]
								},
								"description": "This method returns all the details of a specific directory in the Vault. Each directory will be returned with its own data.\n\nTo run this web service, the user must be a member of the Vault Admins group and have the following permission:\n\n* Audit Users"
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=C2E127C66E3550C7; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002233DFDF5EF6A6EB3F00620F9B30968E6155C6464CC8D4B9A7DBB379080C1FE5600000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Wed, 21 Nov 2018 02:20:16 GMT"
										},
										{
											"key": "Content-Length",
											"value": "926"
										}
									],
									"cookie": [],
									"body": "{\n    \"DirectoryType\": \"MicrosoftADProfile.ini\",\n    \"BindUsername\": \"Svc_CyberArkLDAPBind\",\n    \"BindPassword\": \"\",\n    \"SSLConnect\": false,\n    \"LDAPDirectoryName\": \"cyberarkdemo.com\",\n    \"LDAPDirectoryQueryOrder\": 1,\n    \"LDAPDirectoryDescription\": \"\",\n    \"VaultObjectNamesPrefix\": \"\",\n    \"PasswordObjectPath\": \"root\\\\cyberarkdemo.com.pass\",\n    \"LDAPDirectoryGroupBaseContext\": \"DC=cyberarkdemo,DC=com\",\n    \"ReferralsChasingHopLimit\": -1,\n    \"AppendFriendlyDomainNameToGroup\": false,\n    \"RequireReferredDirectoryDefinition\": false,\n    \"ReferralsDNSLookup\": false,\n    \"DisableUserEnumeration\": false,\n    \"AdditionalQueryFilterOptimize\": true,\n    \"ClientBrowsing\": true,\n    \"ExternalObjectCreation\": true,\n    \"Authentication\": true,\n    \"UseLDAPCertificatesOnly\": false,\n    \"DisablePaging\": false,\n    \"ProvisionDisabledUsers\": false,\n    \"LDAPDirectoryUsage\": [\n        \"ExternalObjectCreation\",\n        \"ClientBrowsing\",\n        \"Authentication\"\n    ],\n    \"DCList\": [\n        {\n            \"Name\": \"192.168.3.100\",\n            \"Port\": 389,\n            \"SSLConnect\": false\n        }\n    ],\n    \"DomainName\": \"\",\n    \"DomainBaseContext\": \"DC=cyberarkdemo,DC=com\"\n}"
								}
							]
						},
						{
							"name": "Create Directory",
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"type": "text",
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"DirectoryType\": \"MicrosoftADProfile.ini\",\n\t\"HostAddresses\": [\n\t\t\"string\"\n\t],\n\t\"BindUsername\": \"string\",\n\t\"BindPassword\": \"string\",\n\t\"Port\": 389,\n\t\"DomainName\": \"string\",\n\t\"DomainBaseContext\": \"string\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories"
									]
								},
								"description": "This method creates a directory in the Vault. Any user who is a member of the Vault Admins group can run this web service.\n\nCreating a new directory in the Vault sets up an automated process that obtains user identification and security information via LDAP, and that automatically provisions Vault users based on the external user account, group membership, and attributes."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text",
												"disabled": true
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"DirectoryType\": \"MicrosoftADProfile.ini\",\n\t\"HostAddresses\": [\n\t\t\"192.168.3.50\"\n\t],\n\t\"BindUsername\": \"Svc_PAS_ADBind\",\n\t\"BindPassword\": \"Cyberark1\",\n\t\"Port\": 389,\n\t\"DomainName\": \"cyberarkdemo.com\",\n\t\"DomainBaseContext\": \"DC=cyberarkdemo,DC=com\"\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=F732D40E8C9BFAE8; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002E439646B34375BA6BD4A9ED9579EE06A25EE9495A5FAE821ED3E980E2063BE8600000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Fri, 14 Dec 2018 19:51:00 GMT"
										},
										{
											"key": "Content-Length",
											"value": "829"
										}
									],
									"cookie": [],
									"body": "{\n    \"DirectoryType\": \"MicrosoftADProfile.ini\",\n    \"HostAddresses\": [\n        \"192.168.3.50\"\n    ],\n    \"BindUsername\": \"Svc_PAS_ADBind\",\n    \"BindPassword\": \"Cyberark1\",\n    \"Port\": 389,\n    \"SSLConnect\": false,\n    \"LDAPDirectoryName\": null,\n    \"LDAPDirectoryQueryOrder\": 0,\n    \"LDAPDirectoryDescription\": null,\n    \"VaultObjectNamesPrefix\": null,\n    \"PasswordObjectPath\": null,\n    \"LDAPDirectoryGroupBaseContext\": null,\n    \"ReferralsChasingHopLimit\": 0,\n    \"AppendFriendlyDomainNameToGroup\": false,\n    \"RequireReferredDirectoryDefinition\": false,\n    \"ReferralsDNSLookup\": false,\n    \"DisableUserEnumeration\": false,\n    \"AdditionalQueryFilterOptimize\": false,\n    \"ClientBrowsing\": false,\n    \"ExternalObjectCreation\": false,\n    \"Authentication\": false,\n    \"UseLDAPCertificatesOnly\": false,\n    \"DisablePaging\": false,\n    \"ProvisionDisabledUsers\": false,\n    \"LDAPDirectoryUsage\": null,\n    \"DCList\": null,\n    \"DomainName\": \"cyberarkdemo.com\",\n    \"DomainBaseContext\": \"DC=cyberarkdemo,DC=com\"\n}"
								}
							]
						},
						{
							"name": "Delete Directory",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization"
									},
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories/{{LDAPID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories",
										"{{LDAPID}}"
									]
								},
								"description": "This method deletes a specific directory configuration in the Vault and its mappings.\n\nTo run this web service, the user must be a member of the Vault Admins group and have the following permissions:\n\n* Audit users\n* Add/Update users\n* Manage Directory mappings\n* Add Safes\n* Reset Users' Passwords\n* Activate Users\n* Add Network Areas\n* Manage Server File Categories\n* Backup All Safes\n* Restore All Safes\n\n**Caution:** After a mapping has been deleted, all LDAP users that were created in the Vault and are mapped to that mapping will be automatically deleted in the Vault during the next periodic LDAP synchronization."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "LDAP Mappings",
					"item": [
						{
							"name": "Get Directory Mapping List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"type": "text",
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories/{{DirectoryUID}}/Mappings",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories",
										"{{DirectoryUID}}",
										"Mappings"
									]
								},
								"description": "This method returns a list of existing directory mappings in the Vault.\n\nTo run this web service, the user must be a member of the Vault Admins group and have the following permissions:\n\n* Manage Directory Mapping"
							},
							"response": []
						},
						{
							"name": "Get Mapping Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									},
									{
										"type": "text",
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories/{{DirectoryUID}}/Mappings/{{MappingID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories",
										"{{DirectoryUID}}",
										"Mappings",
										"{{MappingID}}"
									]
								},
								"description": "This method returns all the details of specific directory mapping that is defined in the Vault.\n\nTo run this web service, the user must be a member of the Vault Admins group and have the following permissions:\n\n* Add/Update users\n* Manage Directory Mapping"
							},
							"response": []
						},
						{
							"name": "Create Directory Mapping",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"MappingName\": \"Test\",\n\t\"LDAPBranch\": \"OU=Test,DC=cyberarkdemo,DC=com\",\n\t\"DomainGroups\": [\n\t\t\"TestDomainGroup\"\n\t],\n\t\"MappingAuthorizations\": [\n\t\t1\n\t]\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories/{{DirectoryUID}}/Mappings",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories",
										"{{DirectoryUID}}",
										"Mappings"
									]
								},
								"description": "This method creates a directory mapping in the Vault.\n\nTo run this web service, the user must be a member of the Vault Admins group and have the following permissions:\n\n* Audit Users\n* Add/Update users\n* Manage Directory Mapping"
							},
							"response": []
						},
						{
							"name": "Reorder Directory Mappings",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"MappingsOrder\": [ <mapping id 1>, <mapping id 2>, ..., <mapping id N> ]\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories/{{DirectoryUID}}/Mappings/Reorder",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories",
										"{{DirectoryUID}}",
										"Mappings",
										"Reorder"
									]
								},
								"description": "This method modifies the order of all mappings that belong to a certain directory.\n\nModifying the order of the mappings changes their priority.\n\nTo run this Web service, you must be a member of the Vault Admins group and have the following permissions:\n\n* Audit users\n* Add/Update users\n* Manage Directory mappings"
							},
							"response": []
						},
						{
							"name": "Edit Directory Mapping",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"LDAPBranch\": \"string\",\n\t\"VaultGroups\": [\n\t\t\"string\"\n\t],\n\t\"MappingAuthorizations\": [\n\t\t\"AddUpdateUsers\"\n\t],\n\t\"Location\": \"string\",\n\t\"AuthenticationMethod\": [\n\t\t\"AuthTypePass\"\n\t],\n\t\"UserType\": \"string\",\n\t\"DisableUser\": true,\n\t\"UserActivityLogPeriod\": 0,\n\t\"UserExpiration\": 0,\n\t\"LogonFromHour\": 0,\n\t\"LogonToHour\": 0,\n\t\"MappingID\": 0,\n\t\"DirectoryMappingOrder\": 0,\n\t\"MappingName\": \"string\",\n\t\"LDAPQuery\": \"string\",\n\t\"DomainGroups\": [\n\t\t\"string\"\n\t]\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories/{{DirectoryUID}}/Mappings/{{MappingID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories",
										"{{DirectoryUID}}",
										"Mappings",
										"{{MappingID}}"
									]
								},
								"description": "This method edits an existing directory mapping.\n\nTo run this web service, the user must be a member of the Vault Admins group and have the following permissions:\n\n* Audit users\n* Add/Update users\n* Manage Directory Mapping"
							},
							"response": []
						},
						{
							"name": "Delete Directory Mapping",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Configuration/LDAP/Directories/{{DirectoryUID}}/Mappings/{{MappingID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Configuration",
										"LDAP",
										"Directories",
										"{{DirectoryUID}}",
										"Mappings",
										"{{MappingID}}"
									]
								},
								"description": "This method deletes a specific directory mapping.\n\nTo run this method you must:\n\n* Be a member of Vault Admin group and have the Manage Directory Mapping authorization.\n* Have at least all the authorizations that the mapping has.\n \t\n**Note:** After a mapping is deleted, LDAP users created in the Vault and are mapped to this mapping, are automatically deleted from the vault during the next periodic LDAP sync. For details, see [Synchronize External Users and Groups in the Vault with the External Directory](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PAS%20INST/Synchronizing-External-Users-and-Groups-in-the-Vault-with-the-External-Directory.htm)"
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Monitor Sessions",
			"item": [
				{
					"name": "Session Actions",
					"item": [
						{
							"name": "Monitor a Live Session",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"type": "text",
										"value": "application/octet-stream",
										"key": "Accept"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/LiveSessions/{{LiveSessionID}}/Monitor",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"LiveSessions",
										"{{LiveSessionID}}",
										"Monitor"
									]
								},
								"description": "This method enables you to monitor an active PSM session using a connection method defined in the PVWA. For details on configuration, see [Active session monitoring settings](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-Live-Session-Monitoring.htm#ActiveSessionMonitoringSettings).\n\nA response header defines which connection method is returned.\n\nFor details, see [Privileged Session Management Interface](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-the-Privileged-Session-Management-Interface.htm)."
							},
							"response": []
						},
						{
							"name": "Resume a Suspended Session",
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/LiveSessions/{{LiveSessionID}}/Resume",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"LiveSessions",
										"{{LiveSessionID}}",
										"Resume"
									]
								},
								"description": "The system will resume the suspended active session and allow the privileged user to continue working.\n\nFor more information on configuration, see [Active session monitoring settings](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-Live-Session-Monitoring.htm#ActiveSessionMonitoringSettings)."
							},
							"response": []
						},
						{
							"name": "Suspend an Active Session",
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/LiveSessions/{{LiveSessionID}}/Suspend",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"LiveSessions",
										"{{LiveSessionID}}",
										"Suspend"
									]
								},
								"description": "The system will prevent a user from interacting with an active session until a security manager resumes it. This allows security teams to review the potentially risky session's audit trail to determine whether to allow the privileged user to continue their work.\n\nFor more information on configuration, see [Active session monitoring settings](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-Live-Session-Monitoring.htm#ActiveSessionMonitoringSettings)."
							},
							"response": []
						},
						{
							"name": "Terminate an Active Session",
							"request": {
								"method": "POST",
								"header": [
									{
										"type": "text",
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/LiveSessions/{{LiveSessionID}}/Terminate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"LiveSessions",
										"{{LiveSessionID}}",
										"Terminate"
									]
								},
								"description": "This method enables the system to terminate an active PSM session immediately to prevent high-risk activities. For more information on configuration, see [Active session monitoring settings](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/PASIMP/Configuring-Live-Session-Monitoring.htm#ActiveSessionMonitoringSettings)."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Recordings",
					"item": [
						{
							"name": "Get Recordings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Recordings?Limit=25&Sort=RiskScore&Offset=0&Search=adm_domain&Safe={{Safe}}&FromTime=1514808001&ToTime=1515326399&Activities=regedit",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Recordings"
									],
									"query": [
										{
											"key": "Limit",
											"value": "25"
										},
										{
											"key": "Sort",
											"value": "RiskScore"
										},
										{
											"key": "Offset",
											"value": "0"
										},
										{
											"key": "Search",
											"value": "adm_domain"
										},
										{
											"key": "Safe",
											"value": "{{Safe}}"
										},
										{
											"key": "FromTime",
											"value": "1514808001"
										},
										{
											"key": "ToTime",
											"value": "1515326399"
										},
										{
											"key": "Activities",
											"value": "regedit"
										}
									]
								},
								"description": "This method returns the details of recordings of PSM, PSMP or OPM sessions."
							},
							"response": []
						},
						{
							"name": "Get Recording Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Recordings/{{RecordingsID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Recordings",
										"{{RecordingsID}}"
									]
								},
								"description": "This method returns the details of recordings of PSM, PSMP or OPM sessions."
							},
							"response": []
						},
						{
							"name": "Get Recording Activities",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Recordings/{{RecordingsID}}/activities",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Recordings",
										"{{RecordingsID}}",
										"activities"
									]
								},
								"description": "This method returns the details of recordings of PSM, PSMP or OPM sessions."
							},
							"response": []
						},
						{
							"name": "Get Recording Properties",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Recordings/{{RecordingsID}}/properties",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Recordings",
										"{{RecordingsID}}",
										"properties"
									]
								},
								"description": "This method returns the details of recordings of PSM, PSMP or OPM sessions."
							},
							"response": []
						},
						{
							"name": "Play Recording",
							"request": {
								"method": "POST",
								"header": [
									{
										"type": "text",
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/recordings/{{RecordingsID}}/Play",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"recordings",
										"{{RecordingsID}}",
										"Play"
									]
								},
								"description": "This method returns a data stream of a specific recorded session."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Live Sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/LiveSessions?Limit=25&Sort=RiskScore&Offset=0&Search=adm_domain&Safe={{Safe}}&FromTime=1514808001&ToTime=1515326399&Activities=regedit",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"LiveSessions"
							],
							"query": [
								{
									"key": "Limit",
									"value": "25"
								},
								{
									"key": "Sort",
									"value": "RiskScore"
								},
								{
									"key": "Offset",
									"value": "0"
								},
								{
									"key": "Search",
									"value": "adm_domain"
								},
								{
									"key": "Safe",
									"value": "{{Safe}}"
								},
								{
									"key": "FromTime",
									"value": "1514808001"
								},
								{
									"key": "ToTime",
									"value": "1515326399"
								},
								{
									"key": "Activities",
									"value": "regedit"
								}
							]
						},
						"description": "This method returns details of live sessions."
					},
					"response": []
				},
				{
					"name": "Get Live Session Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/LiveSessions/{{LiveSessionID}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"LiveSessions",
								"{{LiveSessionID}}"
							]
						},
						"description": "This method returns details of live sessions."
					},
					"response": []
				},
				{
					"name": "Get Live Session Activities",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/LiveSessions/{{LiveSessionID}}/activities",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"LiveSessions",
								"{{LiveSessionID}}",
								"activities"
							]
						},
						"description": "This method returns details of live sessions."
					},
					"response": []
				},
				{
					"name": "Get Live Session Properties",
					"request": {
						"method": "GET",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/LiveSessions/{{LiveSessionID}}/properties",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"LiveSessions",
								"{{LiveSessionID}}",
								"properties"
							]
						},
						"description": "This method returns details of live sessions."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Onboarding Rules",
			"item": [
				{
					"name": "Get Onboarding Rule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/api/AutomaticOnboardingRules/",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"api",
								"AutomaticOnboardingRules",
								""
							]
						},
						"description": "This method returns information about all the defined onboarding rules.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins"
					},
					"response": []
				},
				{
					"name": "Add Onboarding Rule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"DecisionPlatformId\":\"WinLocalAccount\",\r\n  \"DecisionSafeName\":\"{{Safe}}\",\r\n  \"IsAdminUIDFilter\":\"true\",\r\n  \"MachineTypeFilter\":\"Server\",\r\n  \"SystemTypeFilter\":\"Windows\",\r\n  \"UserNameFilter\":\"\"\r\n}",
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/api/AutomaticOnboardingRules",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"api",
								"AutomaticOnboardingRules"
							]
						},
						"description": "This method adds a new onboarding rule to the Vault that filters discovered local privileged pending accounts. When a discovered pending account matches a rule, it will automatically be onboarded to the Safe that is defined in the rule and the password will be reconciled.\r\nNote: The Safe and the reconcile account must be created according to the rule’s definition before you run this API in order to onboard the pending account automatically. The reconcile account must be associated to the platform that is defined in the rule.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins"
					},
					"response": []
				},
				{
					"name": "Update Onboarding Rule",
					"request": {
						"method": "PUT",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization",
								"type": "text"
							},
							{
								"value": "application/json",
								"type": "text",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"TargetPlatformId\": \"<platform ID>\",\n\t\"TargetSafeName\": \"<Safe name>\",\n\t\"IsAdminIDFilter\": <False>,\n\t\"MachineTypeFilter\": \"<Server>\",\n\t\"SystemTypeFilter\": \"<Windows>\",\n\t\"UserNameFilter\": \"<filter>\",\n\t\"UserNameMethod\": \"<Begins>\",\n\t\"AddressFilter\": \"<filter>\",\n\t\"AddressMethod\": \"<Equals>\",\n\t\"AccountCategoryFilter\": \"<Any>\",\n\t\"RuleName\": \"<rule name>\",\n\t\"RuleDescription\": \"<description>\"\n}",
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/api/AutomaticOnboardingRules?id=1",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"api",
								"AutomaticOnboardingRules"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Onboarding Rule",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [],
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/api/AutomaticOnboardingRules/?id=1",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"api",
								"AutomaticOnboardingRules",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "This method deletes an automatic onboarding rule from the Vault.\r\nThe user who runs this web service must belong to the following group:\r\n- Vault Admins"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "OPM Commands",
			"item": [
				{
					"name": "Account",
					"item": [
						{
							"name": "List Account/ACL",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Account/{{ACLAddress}}|{{ACLUserName}}|{{ACLPolicyID}}/PrivilegedCommands",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Account",
										"{{ACLAddress}}|{{ACLUserName}}|{{ACLPolicyID}}",
										"PrivilegedCommands"
									]
								},
								"description": "This method gets a list of the privileged commands (OPM rules) associated with this account."
							},
							"response": [
								{
									"name": "500 Internal Server Error (ACLAddress Required)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"disabled": true
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "CA-ErrorCode",
											"value": ""
										},
										{
											"key": "CA-ErrorMessage",
											"value": "Input parameter AccountAddress is obligatory. Please fix it and try again."
										},
										{
											"key": "CA-ErrorMessageBase64Encoded",
											"value": "SW5wdXQgcGFyYW1ldGVyIEFjY291bnRBZGRyZXNzIGlzIG9ibGlnYXRvcnkuIFBsZWFzZSBmaXggaXQgYW5kIHRyeSBhZ2Fpbi4="
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Content-Length",
											"value": "118"
										},
										{
											"key": "Content-Type",
											"value": "text/html"
										},
										{
											"key": "Date",
											"value": "Mon, 05 Jun 2017 21:08:01 GMT"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/8.5"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; HttpOnly"
										},
										{
											"key": "X-Frame-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										}
									],
									"cookie": [
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": ""
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": ""
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": ""
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": ""
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": "Desktop"
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/PasswordVault/",
											"secure": false,
											"session": false,
											"value": "ldap"
										},
										{
											"expires": "Invalid Date",
											"hostOnly": false,
											"httpOnly": true,
											"domain": "components.joe-garcia.local",
											"path": "/",
											"secure": false,
											"session": false,
											"value": "t2jlmd4i1yjna3morxfbr3pv"
										}
									],
									"body": "{\"ErrorCode\":\"CAWS00001E\",\"ErrorMessage\":\"Input parameter AccountAddress is obligatory. Please fix it and try again.\"}"
								}
							]
						},
						{
							"name": "Add Account/ACL",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Command\":\"/bin/sh\",\n  \"CommandGroup\":false,\n  \"PermissionType\":\"Deny\",\n  \"Restrictions\":\"\",\n  \"UserName\":\"*\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Account/{{ACLAddress}}|{{ACLUserName}}|{{ACLPolicyID}}/PrivilegedCommands",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Account",
										"{{ACLAddress}}|{{ACLUserName}}|{{ACLPolicyID}}",
										"PrivilegedCommands"
									]
								},
								"description": "This method adds a new privileged command rule to the account."
							},
							"response": []
						},
						{
							"name": "Delete Account/ACL",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Account/{{ACLAddress}}|{{ACLUserName}}|{{ACLPolicyID}}/PrivilegedCommands/?id=1",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Account",
										"{{ACLAddress}}|{{ACLUserName}}|{{ACLPolicyID}}",
										"PrivilegedCommands",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1"
										}
									]
								},
								"description": "This method deletes privileged commands rules associated with the account."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Policy",
					"item": [
						{
							"name": "List Policy/ACL",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Policy/{{ACLPolicyID}}/PrivilegedCommands",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Policy",
										"{{ACLPolicyID}}",
										"PrivilegedCommands"
									]
								},
								"description": "This method gets a list of the privileged commands (OPM rules) associated with this policy."
							},
							"response": []
						},
						{
							"name": "Add Policy/ACL",
							"request": {
								"method": "PUT",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"Command\":\"/bin/sh\",\r\n  \"CommandGroup\":false,\r\n  \"PermissionType\":\"Deny\",\r\n  \"Restrictions\":\"\",\r\n  \"UserName\":\"{{ACLUserName}}\"\r\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Policy/{{ACLPolicyID}}/PrivilegedCommands",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Policy",
										"{{ACLPolicyID}}",
										"PrivilegedCommands"
									]
								},
								"description": "This method adds a new privileged command rule to the policy."
							},
							"response": []
						},
						{
							"name": "Delete Policy/ACL",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [],
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Policy/{{ACLPolicyID}}/PrivilegedCommands/?id=1",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Policy",
										"{{ACLPolicyID}}",
										"PrivilegedCommands",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "1"
										}
									]
								},
								"description": "This method deletes all privileged commands rules associated with the policy."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Platforms",
			"item": [
				{
					"name": "Target Platforms",
					"item": [
						{
							"name": "Get Target Platforms",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets"
									]
								},
								"description": "This method allows users to retrieve basic information of all existing target platforms.\n\nYou can use filters to retrieve a subset of the target platforms or search for a specific target platform. For details, see [URL parameters](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/11.6/en/Content/SDK/rest-api-get-target-platforms.htm#URL%C2%A0para)."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/platforms/targets",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"platforms",
												"targets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "33875"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Fri, 25 Sep 2020 16:07:11 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"Platforms\": [\n        {\n            \"Active\": true,\n            \"SystemType\": \"*NIX\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PSM\"\n            },\n            \"ID\": 2,\n            \"PlatformID\": \"UnixSSH\",\n            \"Name\": \"Unix via SSH\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"*NIX\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 23,\n            \"PlatformID\": \"UnixSSHKeys\",\n            \"Name\": \"Unix via SSH Keys\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 35,\n            \"PlatformID\": \"ConjurHost\",\n            \"Name\": \"Conjur Host\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 48,\n            \"PlatformID\": \"ConjurUser\",\n            \"Name\": \"Conjur User\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 32,\n            \"PlatformID\": \"CyberArkPTA\",\n            \"Name\": \"CyberArk PTA\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 9,\n            \"PlatformID\": \"CyberArk\",\n            \"Name\": \"CyberArk Vault\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 28,\n            \"PlatformID\": \"RSAManagement\",\n            \"Name\": \"RSA Authentication Manager\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Application\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 5,\n            \"PlatformID\": \"SAP\",\n            \"Name\": \"SAP\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 25,\n            \"PlatformID\": \"AWS\",\n            \"Name\": \"Amazon Web Services - AWS\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 26,\n            \"PlatformID\": \"AWSAccessKeys\",\n            \"Name\": \"Amazon Web Services - AWS - Access Keys\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 30,\n            \"PlatformID\": \"AzurePasswordManagement\",\n            \"Name\": \"Microsoft Azure Password Management\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 37,\n            \"PlatformID\": \"GCPServiceAccount\",\n            \"Name\": \"Google Cloud Platfrom - Service Account\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Cloud Service\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 29,\n            \"PlatformID\": \"AzureApplicationKeys\",\n            \"Name\": \"Microsoft Azure Application Keys Management\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 17,\n            \"PlatformID\": \"MySQL\",\n            \"Name\": \"MySQL Server\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 15,\n            \"PlatformID\": \"DB2UnixSSH\",\n            \"Name\": \"DB2 on Unix via SSH\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 16,\n            \"PlatformID\": \"InformixUnixSSH\",\n            \"Name\": \"Informix on Unix via SSH\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 3,\n            \"PlatformID\": \"MSSql\",\n            \"Name\": \"Microsoft SQL Server\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 8,\n            \"PlatformID\": \"Oracle\",\n            \"Name\": \"Oracle Database\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 31,\n            \"PlatformID\": \"SAPHANA\",\n            \"Name\": \"SAP HANA\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Database\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 4,\n            \"PlatformID\": \"Sybase\",\n            \"Name\": \"Sybase ASE\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Directory\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 21,\n            \"PlatformID\": \"Novell-eDirectory\",\n            \"Name\": \"Novell eDirectory server\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Directory\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 20,\n            \"PlatformID\": \"SunOneDirectorySSL\",\n            \"Name\": \"SunOne directory via SSL\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Network Device\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 19,\n            \"PlatformID\": \"CiscoSSH\",\n            \"Name\": \"Cisco router via SSH\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Operating System\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 12,\n            \"PlatformID\": \"as400\",\n            \"Name\": \"AS400\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Operating System\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 13,\n            \"PlatformID\": \"OS390SSH\",\n            \"Name\": \"OS390 via SSH\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Operating System\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 14,\n            \"PlatformID\": \"VMWareESX-API\",\n            \"Name\": \"VMWare ESX Account API\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"PSM Secure Connect\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 22,\n            \"PlatformID\": \"PSMSecureConnect\",\n            \"Name\": \"PSM Secure Connect\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Security Appliance\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 18,\n            \"PlatformID\": \"Firewall1\",\n            \"Name\": \"Check Point FireWall-1\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Security Appliance\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 24,\n            \"PlatformID\": \"GAiASSH\",\n            \"Name\": \"Check Point GAiA via SSH\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Website\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 42,\n            \"PlatformID\": \"DockerRegistry\",\n            \"Name\": \"Docker Registry\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Website\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 38,\n            \"PlatformID\": \"GenericWebApp\",\n            \"Name\": \"Generic Web App\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Website\",\n            \"AllowedSafes\": \"BZ_I_*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 36,\n            \"PlatformID\": \"BusinessWebsite\",\n            \"Name\": \"Business Website\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": true,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 10,\n            \"PlatformID\": \"WinDesktopLocal\",\n            \"Name\": \"Windows Desktop Local Accounts\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": true,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PSM\"\n            },\n            \"ID\": 7,\n            \"PlatformID\": \"WinDomain\",\n            \"Name\": \"Windows Domain Account\"\n        },\n        {\n            \"Active\": true,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": true,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": true,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 6,\n            \"PlatformID\": \"WinServerLocal\",\n            \"Name\": \"Windows Server Local Accounts\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": true\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"ID\": 11,\n            \"PlatformID\": \"WinLocalWMI\",\n            \"Name\": \"Windows Local Accounts WMI\"\n        },\n        {\n            \"Active\": false,\n            \"SystemType\": \"Windows\",\n            \"AllowedSafes\": \".*\",\n            \"PrivilegedAccessWorkflows\": {\n                \"RequireDualControlPasswordAccessApproval\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceCheckinCheckoutExclusiveAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"EnforceOnetimePasswordAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                },\n                \"RequireUsersToSpecifyReasonForAccess\": {\n                    \"IsActive\": false,\n                    \"IsAnException\": false\n                }\n            },\n            \"CredentialsManagementPolicy\": {\n                \"Verification\": {\n                    \"PerformAutomatic\": false,\n                    \"RequirePasswordEveryXDays\": 7,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": false\n                },\n                \"Change\": {\n                    \"PerformAutomatic\": true,\n                    \"RequirePasswordEveryXDays\": 90,\n                    \"AutoOnAdd\": false,\n                    \"AllowManual\": true\n                },\n                \"Reconcile\": {\n                    \"AutomaticReconcileWhenUnsynced\": false,\n                    \"AllowManual\": false\n                },\n                \"SecretUpdateConfiguration\": {\n                    \"ChangePasswordInResetMode\": false\n                }\n            },\n            \"PrivilegedSessionManagement\": {\n                \"PSMServerId\": \"PSMServer_a91999c\",\n                \"PSMServerName\": \"PSM Server on PASAAS-PVWA\"\n            },\n            \"ID\": 27,\n            \"PlatformID\": \"WinLooselyDevice\",\n            \"Name\": \"Windows Loosely Device\"\n        }\n    ],\n    \"Total\": 37\n}"
								}
							]
						},
						{
							"name": "Activate Target Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets/{{PlatformName}}/activate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets",
										"{{PlatformName}}",
										"activate"
									]
								},
								"description": "This method allows Vault Admins to activate a target platform."
							},
							"response": []
						},
						{
							"name": "Deactivate Target Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets/{{PlatformName}}/deactivate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets",
										"{{PlatformName}}",
										"deactivate"
									]
								},
								"description": "This method allows Vault Admins to deactivate a target platform."
							},
							"response": []
						},
						{
							"name": "Duplicate Target Platforms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"test Platform\",\n    \"Description\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets/{{PlatformName}}/duplicate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets",
										"{{PlatformName}}",
										"duplicate"
									]
								},
								"description": "This method allows Vault Admins to duplicate target platforms."
							},
							"response": []
						},
						{
							"name": "Delete Target Platform",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/targets/{{PlatformName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"targets",
										"{{PlatformName}}"
									]
								},
								"description": "This method allows Vault Admins to delete a target platform."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for managing target platforms.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "67e72588-06fb-4184-a25f-dfe335ba8af1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "7bcf8f11-007d-4d79-abf4-c13e9f4ac332",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Dependent Platforms",
					"item": [
						{
							"name": "Get Dependent Platforms",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/dependents?search",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"dependents"
									],
									"query": [
										{
											"key": "search",
											"value": null,
											"description": "Platform Name"
										}
									]
								},
								"description": "This method allows Vault Admins to retrieve basic information about all existing dependent platforms."
							},
							"response": []
						},
						{
							"name": "Duplicate Dependent Platforms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"test Platform\",\n    \"Description\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/dependent/{{PlatformName}}/duplicate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"dependent",
										"{{PlatformName}}",
										"duplicate"
									]
								},
								"description": "This method allows Vault Admins to duplicate dependent platforms."
							},
							"response": []
						},
						{
							"name": "Delete Dependent Platform",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/dependents/{{PlatformName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"dependents",
										"{{PlatformName}}"
									]
								},
								"description": "This method allows Vault Admins to delete a dependent platform."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for managing dependent platforms.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4ff89b2b-2bc6-4a6c-9878-dcdde63471f0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fae4abd9-a4aa-4bbc-8428-8ccfbaace6b9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Group Platforms",
					"item": [
						{
							"name": "Get Group Platforms",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups?search=SSH",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups"
									],
									"query": [
										{
											"key": "search",
											"value": "SSH",
											"description": "Platform Name"
										}
									]
								},
								"description": "This method allows Vault Admins to retrieve basic information about all existing group platforms."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/platforms/groups?search=SSH",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"platforms",
												"groups"
											],
											"query": [
												{
													"key": "search",
													"value": "SSH",
													"description": "Platform Name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "124"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Wed, 30 Sep 2020 13:09:44 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"Platforms\": [\n        {\n            \"Active\": false,\n            \"ID\": 34,\n            \"PlatformID\": \"SampleSSHKeyGroup\",\n            \"Name\": \"[Sample SSH Key Group Platform]\"\n        }\n    ],\n    \"Total\": 1\n}"
								}
							]
						},
						{
							"name": "Activate Group Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups/{{PlatformName}}/activate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups",
										"{{PlatformName}}",
										"activate"
									]
								},
								"description": "This method allows Vault Admins to activate a group platform."
							},
							"response": []
						},
						{
							"name": "Deactivate Group Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups/{{PlatformName}}/deactivate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups",
										"{{PlatformName}}",
										"deactivate"
									]
								},
								"description": "This method allows Vault Admins to deactivate a group platform."
							},
							"response": []
						},
						{
							"name": "Duplicate Group Platforms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"test Platform\",\n    \"Description\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups/{{PlatformName}}/duplicate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups",
										"{{PlatformName}}",
										"duplicate"
									]
								},
								"description": "This method allows Vault Admins to duplicate group platforms."
							},
							"response": []
						},
						{
							"name": "Delete Group Platform",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/groups/{{PlatformName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"groups",
										"{{PlatformName}}"
									]
								},
								"description": "This method allows Vault Admins to delete a group platform."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for managing group platforms.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "01d83a97-94a1-466f-9a88-e36541c1d7bd",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1e5c8ac3-3fa2-4c05-b85a-76dab355e27a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Rotational Group Platforms",
					"item": [
						{
							"name": "Get Rotational Group Platforms",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups?search=MySQL",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups"
									],
									"query": [
										{
											"key": "search",
											"value": "MySQL",
											"description": "Platform Name"
										}
									]
								},
								"description": "This method allows Vault Admins to retrieve basic information about all existing rotational group platforms."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups?search=MySQL",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"passwordvault",
												"api",
												"platforms",
												"rotationalGroups"
											],
											"query": [
												{
													"key": "search",
													"value": "MySQL",
													"description": "Platform Name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache,no-store, no-cache, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache,no-cache"
										},
										{
											"key": "Content-Length",
											"value": "145"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=3159600;includeSubdomains;"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Date",
											"value": "Wed, 30 Sep 2020 13:15:00 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"Platforms\": [\n        {\n            \"Active\": true,\n            \"GracePeriod\": 540,\n            \"ID\": 40,\n            \"PlatformID\": \"MySQLServer-DualAccounts\",\n            \"Name\": \"MySQL Server - Dual Accounts\"\n        }\n    ],\n    \"Total\": 1\n}"
								}
							]
						},
						{
							"name": "Activate Rotational Group Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups/{{PlatformName}}/activate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups",
										"{{PlatformName}}",
										"activate"
									]
								},
								"description": "This method allows Vault Admins to activate a rotational group platform."
							},
							"response": []
						},
						{
							"name": "Deactivate Rotational Group Platform",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups/{{PlatformName}}/deactivate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups",
										"{{PlatformName}}",
										"deactivate"
									]
								},
								"description": "This method allows Vault Admins to deactivate a rotational group platform."
							},
							"response": []
						},
						{
							"name": "Duplicate Rotational Group Platforms",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Name\": \"test Platform\",\n    \"Description\": \"\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups/{{PlatformName}}/duplicate",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups",
										"{{PlatformName}}",
										"duplicate"
									]
								},
								"description": "This method allows Vault Admins to duplicate rotational group platforms."
							},
							"response": []
						},
						{
							"name": "Delete Rotational Group Platform",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/passwordvault/api/platforms/rotationalGroups/{{PlatformName}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"passwordvault",
										"api",
										"platforms",
										"rotationalGroups",
										"{{PlatformName}}"
									]
								},
								"description": "This method allows Vault Admins to delete a rotational group platform."
							},
							"response": []
						}
					],
					"description": "This section includes REST APIs for managing rotational group platforms.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "37a313d8-9b99-4d0b-a466-cb0b89a27a45",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "5cfe7cbe-9566-49b7-9e2c-74379b324639",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Platform Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"type": "text",
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"type": "text",
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/Platforms/{{PlatformName}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"Platforms",
								"{{PlatformName}}"
							]
						},
						"description": "This method retrieves details of a specified platform from the Vault."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"disabled": true
									},
									{
										"type": "text",
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=ldap; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:08:20 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1419"
								}
							],
							"cookie": [],
							"body": "{\n    \"PlatformID\": \"WinDomain\",\n    \"Details\": {\n        \"PolicyID\": \"WinDomain\",\n        \"PolicyName\": \"Windows Domain Account\",\n        \"SearchForUsages\": \"Yes\",\n        \"PolicyType\": \"regular\",\n        \"ImmediateInterval\": \"5\",\n        \"Interval\": \"1440\",\n        \"MaxConcurrentConnections\": \"3\",\n        \"AllowedSafes\": \".*\",\n        \"MinValidityPeriod\": \"60\",\n        \"ResetOveridesMinValidity\": \"yes\",\n        \"ResetOveridesTimeFrame\": \"yes\",\n        \"Timeout\": \"30\",\n        \"UnlockIfFail\": \"no\",\n        \"UnrecoverableErrors\": \"2103,2105,2121\",\n        \"MaximumRetries\": \"5\",\n        \"MinDelayBetweenRetries\": \"90\",\n        \"DllName\": \"PMWindows.dll\",\n        \"XMLFile\": \"yes\",\n        \"AllowManualChange\": \"Yes\",\n        \"PerformPeriodicChange\": \"No\",\n        \"HeadStartInterval\": \"5\",\n        \"FromHour\": \"-1\",\n        \"ToHour\": \"-1\",\n        \"ChangeNotificationPeriod\": \"-1\",\n        \"DaysNotifyPriorExpiration\": \"7\",\n        \"VFAllowManualVerification\": \"Yes\",\n        \"VFPerformPeriodicVerification\": \"No\",\n        \"VFFromHour\": \"-1\",\n        \"VFToHour\": \"-1\",\n        \"RCAllowManualReconciliation\": \"Yes\",\n        \"RCAutomaticReconcileWhenUnsynched\": \"No\",\n        \"RCReconcileReasons\": \"2114,2115,2106,2101\",\n        \"RCFromHour\": \"-1\",\n        \"RCToHour\": \"-1\",\n        \"NFNotifyPriorExpiration\": \"No\",\n        \"NFPriorExpirationRecipients\": \"\",\n        \"NFNotifyOnPasswordDisable\": \"Yes\",\n        \"NFOnPasswordDisableRecipients\": \"\",\n        \"NFNotifyOnVerificationErrors\": \"Yes\",\n        \"NFOnVerificationErrorsRecipients\": \"\",\n        \"NFNotifyOnPasswordUsed\": \"No\",\n        \"NFOnPasswordUsedRecipients\": \"\",\n        \"PasswordLength\": \"8\",\n        \"MinUpperCase\": \"2\",\n        \"MinLowerCase\": \"2\",\n        \"MinDigit\": \"1\",\n        \"MinSpecial\": \"1\",\n        \"OneTimePassword\": \"False\",\n        \"ExpirationPeriod\": \"90\",\n        \"VFVerificationPeriod\": \"7\",\n        \"PasswordLevelRequestTimeframe\": \"False\"\n    },\n    \"Active\": true\n}"
						}
					]
				},
				{
					"name": "Get Platforms",
					"request": {
						"method": "GET",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/Platforms?Active=true&PlatformType=Regular&PlatformName=string",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"Platforms"
							],
							"query": [
								{
									"key": "Active",
									"value": "true",
									"description": "Filter according to whether the platform is active or not. Valid values: true or false"
								},
								{
									"key": "PlatformType",
									"value": "Regular",
									"description": "Filter according to the platform type. Valid values: Group or Regular"
								},
								{
									"key": "PlatformName",
									"value": "string",
									"description": "Searching according to the platform name."
								}
							]
						},
						"description": "This method returns all existing account platforms from the Vault.\n\nYou can use filters to retrieve a subset of the platforms or search for a specific platform. For details, see URL parameters.\n\n**Note:** The [Get Platform Details](#585553e8-dea9-4617-9313-297aac8d7273) API, used to retrieve details for a specific platform, returns a different set of parameters."
					},
					"response": []
				},
				{
					"name": "Export Platform",
					"request": {
						"method": "POST",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"key": "Authorization"
							},
							{
								"value": "application/json",
								"key": "Content-Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/Platforms/{{PlatformName}}/Export",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"Platforms",
								"{{PlatformName}}",
								"Export"
							]
						},
						"description": "If testing this in the Postman application, click the \"Download\" button after receiving the zip file stream to download the ZIP file locally."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "raw",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache,no-cache"
								},
								{
									"key": "Content-Length",
									"value": "2498"
								},
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=ldap; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Content-Disposition",
									"value": "attachment; filename=WinDomain.zip"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:10:06 GMT"
								}
							],
							"cookie": [],
							"body": "PK\u0003\u0004\u0014\u0000\u0000\u0000\b\u0000C�kMZ�\u0017Gf\u0002\u0000\u0000�\n\u0000\u0000\u0014\u0000$\u0000Policy-WinDomain.xml\n\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000����\u0002z�\u0001����\u0002z�\u0001����\u0002z�\u0001�V�n�@\u0010�#�\u000e���\u0006q��I\u0015\u0012�\"5�e��ykO�U�\u001d��N�g��#�\n���8��\u0007�\u0010��d�|3�ͯ���\u001f��%K�\u0015(-Pv�\u000f�{�\u0001\u0019c\"���\u0016f~�ɽ��\u0001�D\fΘg�q'9(n\b�D�6��]\u0016`*b\u0001z�W:��`���\u0005Ld/I:�\u0018ݵp\u0006J�ˆp8��\u000fB\u000e0�B�N�r3G�}�\u001aΨ\u0002�\u0006cL׀\u0004���zZ��Wu߾qv\u001f#SJ�Tl�r҄��\u0010\n�#�ަ�T��+�\u0014ӿ\b�נ$����?\u0011�MrC���E�w��]yBИ������\u0019\u000e�� \u0003TƖ��/�O\u0014��\t��$�Z?�JZ]����zq����[6C��\u000bͪ�J�6�\u0018e,R8e��؞�瘱{�\u0017��YK7!i�\"PզX�5�Q�\u0004ɔ��\u0005�p\u0018��<@L/\u0000CX\bmTy\u0001��,H\u000b�T��J�e�m(�-e`S\u0011/��\b�Ap�H\u0003j'\u001c�9ֻ>��H��Z5.�GP��?�Q���- �h�i�F\\R�\f�9��QJ��\u0001��r�\u0004i5ɂq�t�ht\u0013\u000e\u0002�=�\u0013:�J$P-G�\u0015Յ2:�[S�j�K\u0012�B�����OB�(�Ǩ_R�=����5�Ej�\u0007x���K�sE��L�\u0003/\u0007<�9��������r�%h'GYz\r\u001f��;��z|��z�|Ks���������TC�{t�R0����b��J^]I+���\u001e!��hw��~���k��\u000bPK\u0003\u0004\u0014\u0000\u0000\u0000\b\u0000C�kM\u0019g�2�\u0005\u0000\u0000�\u0015\u0000\u0000\u0014\u0000$\u0000Policy-WinDomain.ini\n\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000����\u0002z�\u0001����\u0002z�\u0001����\u0002z�\u0001�X�o�6\u0010~v��\u000f|l\u0003ǵ���\u001a�!�#�@�\u0018v�n(��Hg��D�$����wGQ��3ֺ\u0001\u0011\f��������;���̄a����4K�e*\u0011ќe\\�\u0014,h6\u0011��Di�rɧBN�W!c�hXO�\\HƣH�Ҷ\u000e\u000f���\u0016I<I�#�fZe��\u0000\\B\u0003��#\u0017\u001ab�$.ạ����/��avƭ�J�E!��7t����_`����\u0000��.<_�#�\u0002I�\u001a�\u0003�\u0006�t-$[�\r�(�$*��E\u001ck0f��&�أ������z��[2u�d5\u001f�vO�|\u0002G[L11��GJF\"\u0011�\n��r��E'��\u0001Z˶B�Ġ��\u0013[�����֎X�Kv\u000f�d\u0010�� E��lX\tt�\u0013s�I�\"�\r�\r����LD3Z)Q�K�{��r\u000b\u001e\u001e�L\u0004w5ί���Uz^��N��\f�(2��`\f\\G�P�[ç`�?��ػ|�ݑ#\u000f<��|bs0��*���3\b4L���UW�T�\\\u0013�\u000eWk��Vyvx�OS�\u0011\f�K�\u001f\n\u0007�W,�%K��-\u0018�.�:gg�M��,~ş��v�5H��d\u0001�\tN\u000f\u000f.��\u0010S���u�(�\u001b\r̄bC��QnS`Ԅ99\f�E\u0007d\u0011����.\u0014��4E37\u0018lÆe�15L\\\ty�\u0013\u0011\u000b;\u001f�\u0016*\u000e>��n��9��\"&�\u0004��\b\f��\u0007ԋ�T,\u0005s\u0002i���H!$��w��r\u001b�n\u0004�\\vL9\u001d������ޟ�\\$\u0001�ɭ$.�m~����J����>m��=�N:��a�O�1;5�\\K\u0016)t\u0006�A��1a�E;B\u0018�C~\u0004V\u000b\u001fa���\u000e�7\u001a\u000e�\u001e���o`\u001f\u0001d����&�ꆲ�SH\u00048u$���K\u0012G���'e+N�Ã߯���x\b��8o�b�T�q9\u0005��5�\u001cY���<)\f�\u0015���\u00024�U$������O�3�xl��[*D\u0019И�1����\u000f�J?�\\\u0007ǝ-�nZ�}|rJպB\"d�z����P\f��2��.\u0007\r*:\u000bM� �T�d�e�:��'�-�7H\tXP�\u0011��'6�e�])���XZ�B��fy��Z4�ta�/@\u001f(��*ri���q\u0007�G�\u0010����{�\npaSp�9\u0010\u00159��)&^\u0015�\n��`<�\u0012o���a�{�b����h��\u0014;�\u0016�(�\u0005n�\\Ǣ�[�b�r ���M$\r��\u001c�\u000f�c�P\t�^\u0005\u001f\u001b�ȷ�\u0005K��%h�CY\u0019��Qt\u0011-\u0015#\u0017P��\u0016Y�@ib\u0019:^�\u0017>��7��\u000f<�s]�P���%�\u001d\u001aXX�Iѻ�BҪ�\nUw��.\\a钉��;�_�ھ��\u000b_&��\\�\u000b������^�WFq\u001fu+q_6U-�;b�p\u0000�hH�N�\u000f�n�p��;H\u0010�:�\u0003\u0014��H��7�U��(���V��x�\u0005\\�����bP߾\u0000B�[E�>Z,�u\u0006�V�\u0002\u0007���\u000e�G݅�\b��\t���9�\u0001�CSP�\u0003�:K�֘�F�=����\u0019u��u5\u00188��z\u0006V�\"�l-6�:�� �ܠ\u0006��#-\u0006��<f��\u0004�EB��ڷ�\u0016���\u0004x�Kʃ����@�b���ɔ\u001aU��\b�Ox�X:�������9\u0011�\\\u0017����%����[�Y{Ӯ6G͈O��?ab1\b~h7Vg�2\u0012�r�Ǒ�0t��b�;\u0018k*�*\u001cխU{�?U��von]���״�2\f8-�/RhY�����ɲ2>�\u0011k���_@N�,��\u001d�o34��\u0006�\u0013��E=.=��Tؠ㾏i���JŕP�{\u0011� ���9Vys9���;̯��\u0019J��\u0001�����\u0007�oN���8t�\u0003PK\u0001\u0002-\u0000\u0014\u0000\u0000\u0000\b\u0000C�kMZ�\u0017Gf\u0002\u0000\u0000�\n\u0000\u0000\u0014\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000Policy-WinDomain.xml\n\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000����\u0002z�\u0001����\u0002z�\u0001����\u0002z�\u0001PK\u0001\u0002-\u0000\u0014\u0000\u0000\u0000\b\u0000C�kM\u0019g�2�\u0005\u0000\u0000�\u0015\u0000\u0000\u0014\u0000$\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�\u0002\u0000\u0000Policy-WinDomain.ini\n\u0000 \u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0018\u0000����\u0002z�\u0001����\u0002z�\u0001����\u0002z�\u0001PK\u0005\u0006\u0000\u0000\u0000\u0000\u0002\u0000\u0002\u0000�\u0000\u0000\u0000�\b\u0000\u0000\u0000\u0000"
						}
					]
				},
				{
					"name": "Import Platform",
					"request": {
						"method": "POST",
						"header": [
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization",
								"type": "text"
							},
							{
								"value": "application/json",
								"type": "text",
								"key": "Content-Type"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ImportFile\": {zip file in the format of BASE 64 array}\n}",
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/API/Platforms/Import",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"API",
								"Platforms",
								"Import"
							]
						},
						"description": "This method enables administrators to import new platforms and dependencies."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Privileged Threat Analytics (PTA)",
			"item": [
				{
					"name": "PTA Installation",
					"item": [
						{
							"name": "Install PTA",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{PTAAuthToken}}",
										"type": "text"
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"currentPassword\": \"currentPass\",\n    \"newPassword\": \"newpass\",\n    \"timezone\": \"Israel\",\n    \"epochTime\": \"1525246349\",\n    \"ntp\": \"10.10.0.50\",\n    \"vault\": {\n        \"ip\": \"10.10.10.10, 10.10.10.11\",\n        \"port\": \"10000\",\n        \"ipDR\": \"10.10.50.10, 10.10.50.11\",\n        \"timezone\": \"Israel\",\n        \"adminUser\": \"admin\",\n        \"adminPassword\": \"fkdshsfkd23392hk!\",\n        \"daysActivity\": \"200\"\n    },\n    \"pvwa\": {\n        \"connectionMethod\": \"http\",\n        \"host\": \"pvwa-host\",\n        \"port\": \"30456\",\n        \"appContext\": \"PasswordVault\"\n    }\n}",
									"options": {}
								},
								"url": {
									"raw": "{{PTABaseURL}}/installer/api/installation",
									"host": [
										"{{PTABaseURL}}"
									],
									"path": [
										"installer",
										"api",
										"installation"
									]
								},
								"description": "This method installs the PTA Server."
							},
							"response": []
						},
						{
							"name": "PTA Installation Status",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{PTAAuthToken}}",
										"type": "text",
										"key": "Authorization"
									},
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{PTABaseURL}}/installer/api/installation",
									"host": [
										"{{PTABaseURL}}"
									],
									"path": [
										"installer",
										"api",
										"installation"
									]
								},
								"description": "This method returns the status of the installation of the PTA server."
							},
							"response": []
						},
						{
							"name": "Server Encryption Key",
							"request": {
								"method": "GET",
								"header": [
									{
										"type": "text",
										"value": "{{PTAAuthToken}}",
										"key": "Authorization"
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{PTABaseURL}}/installer/api/encryptionkey",
									"host": [
										"{{PTABaseURL}}"
									],
									"path": [
										"installer",
										"api",
										"encryptionkey"
									]
								},
								"description": "This method generates and returns an RSA encryption key as base 64 string that is used by the installer for encrypting sensitive fields.\n\nTo encrypt the sensitive fields, encrypt the data value using the RSA algorithm that uses the generated key as the encryption key. Add an **{encrypted}** prefix string to the encrypted value to indicate to the PTA server to decrypt the data."
							},
							"response": []
						},
						{
							"name": "PTA Server Authentication",
							"request": {
								"method": "POST",
								"header": [
									{
										"type": "text",
										"value": "application/x-www-form-urlencoded",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{apiUsername}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "{{apiPassword}}",
											"type": "text",
											"disabled": true
										}
									],
									"options": {}
								},
								"url": {
									"raw": "{{PTABaseURL}}/installer/api/getauthtoken",
									"host": [
										"{{PTABaseURL}}"
									],
									"path": [
										"installer",
										"api",
										"getauthtoken"
									]
								},
								"description": "This method generates a token that enables the user to authenticate to the PTA Server using the machine credentials for the installation process. This method can be run with an encrypted or clear text password. To encrypt the password, see [Get Server encryption key](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/WebServices/ServerEncryption.htm)."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Security Events",
					"item": [
						{
							"name": "Get Security Events",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "lastUpdatedEventDate",
										"type": "text",
										"value": "1309737600"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/pta/API/Events/",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"pta",
										"API",
										"Events",
										""
									]
								},
								"description": "This method returns all PTA Security Events."
							},
							"response": []
						},
						{
							"name": "Get Security Settings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/pta/API/Settings",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"pta",
										"API",
										"Settings"
									]
								},
								"description": "This method returns risky activities rules and automatic remediation settings of the PTA Server configuration."
							},
							"response": []
						},
						{
							"name": "Add Risky Commands Rule",
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization"
									},
									{
										"type": "text",
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"category\": \"KEYSTROKES\",\n\t\"regex\": \"(.*)netsh(.*)wlan(.*)key=clear(.*)\", \n\t\"score\": 40, \n\t\"description\": \"Indication of a privileged user using a decoding command in clear text to retrieve a WIFI password.\", \n\t\"response\": \"NONE\", \n\t\"active\": true,\n\t\"scope\": { \n\t\t\"vaultUsers\": {\n\t\t\t\"mode\":\"EXCLUDE\",\n\t\t\t\"list\":[\"john*\"]\n\t\t}, \n\t\t\"machines\":{\n\t\t\t\"mode\":\"INCLUDE\",\n\t\t\t\"list\":[\"*\"]\n\t\t} \n\t}\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/pta/API/Settings/RiskyActivity/",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"pta",
										"API",
										"Settings",
										"RiskyActivity",
										""
									]
								},
								"description": "This method adds a new Risky Activity rule in the PTA server configuration."
							},
							"response": []
						},
						{
							"name": "Update Risky Commands Rule",
							"request": {
								"method": "PUT",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text"
									},
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"id\": \"0\", \n\t\"category\": \"KEYSTROKES\",\n\t\"regex\": \"(.*)netsh(.*)wlan(.*)key=clear(.*)\", \n\t\"score\": 40, \n\t\"description\": \"Indication of a privileged user using a decoding command in clear text to retrieve a WIFI password.\", \n\t\"response\": \"NONE\", \n\t\"active\": true\n\t\"scope\": { \n\t\t\"vaultUsers\": {\n\t\t\t\"mode\":\"EXCLUDE\",\n\t\t\t\"list\":[\"anna\"]\n\t\t}, \n\t\t\"machines\": {\n\t\t\t\"mode\":\"include\",\n\t\t\t\"list\":[\"*\"]\n\t\t} \n\t}\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/pta/API/Settings/RiskyActivity/",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"pta",
										"API",
										"Settings",
										"RiskyActivity",
										""
									]
								},
								"description": "This method updates an existing Risky Activity rule in the PTA server configuration."
							},
							"response": []
						},
						{
							"name": "Update Security Remediation Settings",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"type": "text",
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/pta/API/Settings/AutomaticRemediations/",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"pta",
										"API",
										"Settings",
										"AutomaticRemediations",
										""
									]
								},
								"description": "This method updates the automatic remediation properties in the PTA server configuration."
							},
							"response": []
						},
						{
							"name": "Update Security Event",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "{{PTAAuthToken}}",
										"type": "text",
										"description": "Session Authorization JWT Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"mStatus\": \"<OPEN/CLOSED>\"\n}",
									"options": {
										"raw": {}
									}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/pta/API/Events/{{ptaSecurityEventID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"pta",
										"API",
										"Events",
										"{{ptaSecurityEventID}}"
									]
								},
								"description": "This method updates the status of a security event to open or closed."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get PTA System Health",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{apiUsername}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{apiPassword}}",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"type": "text",
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{PTABaseURL}}/monitoring/federate?match[]=%7Bjob%3D~%22ptaaa_.%2B%22%7D",
							"host": [
								"{{PTABaseURL}}"
							],
							"path": [
								"monitoring",
								"federate"
							],
							"query": [
								{
									"key": "match[]",
									"value": "%7Bjob%3D~%22ptaaa_.%2B%22%7D",
									"description": "Job ID(s) to monitor in array"
								}
							]
						},
						"description": "This method returns Prometheus monitor metrics about the PTA Server and database. When you run the API for the first time, you are redirected to the PTA Login screen.\n\n1. Log in to the PTA Server using **monitor** as the user and **DiamondMonitor** (case sensitive) as the password. You are then prompted to change the password.\n2. After you change the password, encode the user (**monitor**) and the new password in BASE 64.\n* Enter the data in the format **username:password**.\n* The encoded result is entered in the **Authorization** header parameter in the format **Basic <encoded result>**. _In this Postman collection, we use the **Authorization** tab to automatically do this for us instead._\n\nYou can use Grafana or similar tools to display the results in a user-friendly format."
					},
					"response": []
				},
				{
					"name": "Get PTA Replication Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{PTAAuthToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"type": "text",
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{PTABaseURL}}/api/monitoring",
							"host": [
								"{{PTABaseURL}}"
							],
							"path": [
								"api",
								"monitoring"
							]
						},
						"description": "This method returns details about the health of the PTA Server and Application."
					},
					"response": []
				},
				{
					"name": "Get Authentication Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{apiUsername}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{apiPassword}}",
									"type": "text"
								}
							],
							"options": {
								"urlencoded": {}
							}
						},
						"url": {
							"raw": "{{PTABaseURL}}/api/getauthtoken",
							"host": [
								"{{PTABaseURL}}"
							],
							"path": [
								"api",
								"getauthtoken"
							]
						},
						"description": "This method enables a user to get a token upon Web application authentication. You can use this method to monitor the PTA system health, as shown in [Get PTA replication status](https://docs.cyberark.com/Product-Doc/OnlineHelp/PAS/Latest/en/Content/WebServices/PTA_System_Health.htm)."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Requests",
			"item": [
				{
					"name": "Confirm Requests",
					"item": [
						{
							"name": "Get Incoming Request List",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/IncomingRequests?onlywaiting=false&expired=false",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"IncomingRequests"
									],
									"query": [
										{
											"key": "onlywaiting",
											"value": "false"
										},
										{
											"key": "expired",
											"value": "false"
										}
									]
								},
								"description": "This method returns a list of all the requests for the confirmer to respond to."
							},
							"response": []
						},
						{
							"name": "Get Details of a Request for Confirmation",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/IncomingRequests/{{RequestID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"IncomingRequests",
										"{{RequestID}}"
									]
								},
								"description": "This method returns details of a specific request in the Incoming Requests list."
							},
							"response": []
						},
						{
							"name": "Confirm Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Reason\":\"Automatically accepted via CyberArk Web Services on {{$timestamp}}\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/IncomingRequests/{{RequestID}}/Confirm",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"IncomingRequests",
										"{{RequestID}}",
										"Confirm"
									]
								},
								"description": "This method enables a request confirmer to confirm a single request, identified by its request ID."
							},
							"response": []
						},
						{
							"name": "Reject Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"Reason\":\"Rejected automatically by CyberArk Web Services on {{$timestamp}}\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/IncomingRequests/{{RequestID}}/Reject",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"IncomingRequests",
										"{{RequestID}}",
										"Reject"
									]
								},
								"description": "This method enables a request confirmer to reject a single request, identified by its request ID."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "My Requests",
					"item": [
						{
							"name": "Get My Requests",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/MyRequests?onlywaiting=false&expired=false",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"MyRequests"
									],
									"query": [
										{
											"key": "onlywaiting",
											"value": "false"
										},
										{
											"key": "expired",
											"value": "false"
										}
									]
								},
								"description": "This method returns a list of the end user's requests."
							},
							"response": []
						},
						{
							"name": "Get Details of My Requests",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/MyRequests/{{RequestID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"MyRequests",
										"{{RequestID}}"
									]
								},
								"description": "This method returns details of all the requests in My Requests list."
							},
							"response": []
						},
						{
							"name": "Create a Request",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"AccountID\":\"{{AccountID}}\",\n  \"Reason\":\"Access requested via CyberArk Web Services\",\n  \"TicketingSystemName\":\"ServiceNow\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/MyRequests",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"MyRequests"
									]
								},
								"description": "This method creates an access request for a specific account. This account may be either a password account or an SSH Key account."
							},
							"response": []
						},
						{
							"name": "Delete My Request",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/MyRequests/{{RequestID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"MyRequests",
										"{{RequestID}}"
									]
								},
								"description": "This method deletes a request made by a user."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Safes",
			"item": [
				{
					"name": "v2 API",
					"item": [
						{
							"name": "Get Safe Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Safes/{{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Safes",
										"{{Safe}}"
									]
								},
								"description": "This method returns information about a specific Safe in the Vault."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"disabled": true
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:16:41 GMT"
										},
										{
											"key": "Content-Length",
											"value": "180"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetSafeResult\": {\n        \"Description\": \"\",\n        \"ManagingCPM\": \"PasswordManagerNG\",\n        \"NumberOfDaysRetention\": null,\n        \"NumberOfVersionsRetention\": 5,\n        \"OLACEnabled\": false,\n        \"SafeName\": \"P-WIN-LOCAL-ADMIN\"\n    }\n}"
								}
							]
						},
						{
							"name": "List Safes",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/api/Safes",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"api",
										"Safes"
									]
								},
								"description": "This method returns information about all of the user’s Safes in the Vault."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:15:54 GMT"
										},
										{
											"key": "Content-Length",
											"value": "4385"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetSafesResult\": [\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"AccountsFeedADAccounts\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"AccountsFeedDiscoveryLogs\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-CYBR-RESTAPI-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-LIN-ADMIN-USERS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-LIN-ROOT-SSHKEYS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-MYSQL-LOCAL-USERS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-QUALYS-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-TENABLE-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-TEST-SAFE\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"Notification Engine\"\n        },\n        {\n            \"Description\": \"\",\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"P-WIN-LOCAL-ADMIN\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager_Info\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager_Pending\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerNG\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerNG_Info\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerShared\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PSMPADBridgeCustom\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PSMPADBUserProfile\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PSMUniversalConnectors\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PSMUnmanagedSessionAccounts\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAConfig\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAPublicData\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PVWAReports\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PVWATaskDefinitions\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWATicketingSystem\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAUserPrefs\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"VaultInternal\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "v1 API",
					"item": [
						{
							"name": "Get Safe Details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text"
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes/{{Safe}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Safes",
										"{{Safe}}"
									]
								},
								"description": "This method returns information about a specific Safe in the Vault."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:16:41 GMT"
										},
										{
											"key": "Content-Length",
											"value": "180"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetSafeResult\": {\n        \"Description\": \"\",\n        \"ManagingCPM\": \"PasswordManagerNG\",\n        \"NumberOfDaysRetention\": null,\n        \"NumberOfVersionsRetention\": 5,\n        \"OLACEnabled\": false,\n        \"SafeName\": \"P-WIN-LOCAL-ADMIN\"\n    }\n}"
								}
							]
						},
						{
							"name": "List Safes",
							"request": {
								"method": "GET",
								"header": [
									{
										"type": "text",
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Safes"
									]
								},
								"description": "This method returns information about all of the user’s Safes in the Vault."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"disabled": true
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=809AD28AAFCE9858; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=00000002C39399D78441B5DC5782206114015D5E0C0F450850D1C063CA889719B6A3C3E500000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=ldap; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Sun, 11 Nov 2018 21:15:54 GMT"
										},
										{
											"key": "Content-Length",
											"value": "4385"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetSafesResult\": [\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"AccountsFeedADAccounts\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"AccountsFeedDiscoveryLogs\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-CYBR-RESTAPI-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-LIN-ADMIN-USERS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-LIN-ROOT-SSHKEYS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-MYSQL-LOCAL-USERS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-QUALYS-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-TENABLE-ACCTS\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-TEST-SAFE\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"Notification Engine\"\n        },\n        {\n            \"Description\": \"\",\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"P-WIN-LOCAL-ADMIN\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager_Info\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManager_Pending\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerNG\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerNG_Info\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PasswordManagerShared\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PSMPADBridgeCustom\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PSMPADBUserProfile\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PSMUniversalConnectors\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PSMUnmanagedSessionAccounts\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAConfig\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAPublicData\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PVWAReports\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": true,\n            \"SafeName\": \"PVWATaskDefinitions\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWATicketingSystem\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"PVWAUserPrefs\"\n        },\n        {\n            \"Description\": null,\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 0,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"VaultInternal\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Safe Members",
					"item": [
						{
							"name": "List Safe Members",
							"request": {
								"method": "GET",
								"header": [
									{
										"type": "text",
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes/{{Safe}}/Members",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Safes",
										"{{Safe}}",
										"Members"
									]
								},
								"description": "This method returns a list of the members of the Safe. The user performing this task must have **ViewSafeMembers** permissions in the Safe."
							},
							"response": []
						},
						{
							"name": "Add Safe Member",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"value": "application/json",
										"type": "text",
										"key": "Content-Type"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"member\": {\n\t\t\"MemberName\":\"<The name of the user to add as a Safe member>\",\n\t\t\"SearchIn\":\"<Search for the member in the Vault or Domain>\",\n\t\t\"MembershipExpirationDate\":\"<MM\\DD\\YY or empty if there is no expiration date>\",\n\t\t\"Permissions\":<User’s permissions in the Safe>\n\t\t[\n\t\t\t{\"Key\":\"UseAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"RetrieveAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ListAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"AddAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"UpdateAccountContent\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"UpdateAccountProperties\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"InitiateCPMAccountManagementOperations\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"SpecifyNextAccountContent\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"RenameAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"DeleteAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"UnlockAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ManageSafe\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ManageSafeMembers\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"BackupSafe\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ViewAuditLog\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ViewSafeMembers\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"RequestsAuthorizationLevel\", \"Value\":<0/1/2>},\n\t\t\t{\"Key\":\"AccessWithoutConfirmation\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"CreateFolders\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"DeleteFolders\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"MoveAccountsAndFolders\", \"Value\":<true/false>}\n\t\t]\n\t}\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes/{{Safe}}/Members",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Safes",
										"{{Safe}}",
										"Members"
									]
								},
								"description": "This method adds an existing user as a Safe member.\n\nThe user who runs this web service requires **Manage Safe Members** permissions in the Vault."
							},
							"response": []
						},
						{
							"name": "Update Safe Member",
							"request": {
								"method": "PUT",
								"header": [
									{
										"type": "text",
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"member\": {\n\t\t\"MembershipExpirationDate\":\"<MM\\DD\\YY or empty for no expiration>\",\n\t\t\"Permissions\":<User’s permissions in the Safe>\n\t\t[\n\t\t\t{\"Key\":\"UseAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"RetrieveAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ListAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"AddAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"UpdateAccountContent\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"UpdateAccountProperties\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"InitiateCPMAccountManagementOperations\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"SpecifyNextAccountContent\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"RenameAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"DeleteAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"UnlockAccounts\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ManageSafe\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ManageSafeMembers\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"BackupSafe\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ViewAuditLog\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"ViewSafeMembers\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"RequestsAuthorizationLevel\", \"Value\":<0/1/2>},\n\t\t\t{\"Key\":\"AccessWithoutConfirmation\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"CreateFolders\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"DeleteFolders\", \"Value\":<true/false>},\n\t\t\t{\"Key\":\"MoveAccountsAndFolders\", \"Value\":<true/false>}\n\t\t]\n\t}\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes/{{Safe}}/Members/{{SafeMember}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Safes",
										"{{Safe}}",
										"Members",
										"{{SafeMember}}"
									]
								},
								"description": "This method updates an existing Safe member.\n\nThe user who runs this web service requires **Manage Safe Members** permissions in the Vault."
							},
							"response": []
						},
						{
							"name": "Delete Safe Member",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes/{{Safe}}/Members/{{SafeMember}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Safes",
										"{{Safe}}",
										"Members",
										"{{SafeMember}}"
									]
								},
								"description": "This method removes a specific member from a Safe.\n\nThe user who runs this web service requires **Manage Safe Members** permissions in the Vault."
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Safe Account Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"type": "text",
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization"
							},
							{
								"value": "application/json",
								"type": "text",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/Safes/{{Safe}}/AccountGroups",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"Safes",
								"{{Safe}}",
								"AccountGroups"
							]
						},
						"description": "This method returns all the existing account groups in a specific Safe. The user performing this task must have the following permissions in the Safe:\n\n* Add accounts\n* Update account content\n* Update account properties\n* Create folders"
					},
					"response": [
						{
							"name": "200 OK (No Account Groups)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:20:34 GMT"
								},
								{
									"key": "Content-Length",
									"value": "2"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "Get Safe by Platform ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"type": "text",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/api/Platforms/{{PlatformName}}/Safes",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"api",
								"Platforms",
								"{{PlatformName}}",
								"Safes"
							]
						},
						"description": "This method returns all the safes according to the platform ID."
					},
					"response": []
				},
				{
					"name": "Search for a Safe",
					"request": {
						"method": "GET",
						"header": [
							{
								"type": "text",
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"type": "text",
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes?query={{Query}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Safes"
							],
							"query": [
								{
									"key": "query",
									"value": "{{Query}}"
								}
							]
						},
						"description": "This method returns information about the Safes in the Vault that meet the criteria specified in the search query."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"type": "text",
										"disabled": true
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:19:06 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1250"
								}
							],
							"cookie": [],
							"body": "{\n    \"SearchSafesResult\": [\n        {\n            \"Description\": \"Dev, CyberArk, REST API, Accounts\",\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-CYBR-RESTAPI-ACCTS\"\n        },\n        {\n            \"Description\": \"\",\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-LIN-ADMIN-USERS\"\n        },\n        {\n            \"Description\": \"Dev, Linux, Root, SSH Keys\",\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-LIN-ROOT-SSHKEYS\"\n        },\n        {\n            \"Description\": \"Dev, MySQL, Local Users\",\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-MYSQL-LOCAL-USERS\"\n        },\n        {\n            \"Description\": \"DEV, Qualys, Accounts\",\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-QUALYS-ACCTS\"\n        },\n        {\n            \"Description\": \"DEV, Tenable, Accounts\",\n            \"ManagingCPM\": \"\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-TENABLE-ACCTS\"\n        },\n        {\n            \"Description\": \"\",\n            \"ManagingCPM\": \"PasswordManagerNG\",\n            \"NumberOfDaysRetention\": null,\n            \"NumberOfVersionsRetention\": 5,\n            \"OLACEnabled\": false,\n            \"SafeName\": \"D-TEST-SAFE\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Add Safe",
					"request": {
						"method": "POST",
						"header": [
							{
								"type": "text",
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"safe\": {\n\t\t\"SafeName\":\"<Safe name>\",\n\t\t\"Description\":\"<Description>\",\n\t\t\"OLACEnabled\":<true/false>,\n\t\t\"ManagingCPM\":\"<CPM user>\",\n\t\t\"NumberOfVersionsRetention\":<1-999>,\n\t\t\"NumberOfDaysRetention\":<1-3650>\n\t}\n}",
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Safes"
							]
						},
						"description": "This method adds a new Safe to the Vault.\n\nThe user who runs this web service requires **Add Safes** permissions in the Vault."
					},
					"response": []
				},
				{
					"name": "Update Safe",
					"request": {
						"method": "PUT",
						"header": [
							{
								"type": "text",
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization"
							},
							{
								"type": "text",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"safe\": {\n\t\t\"SafeName\":\"<The name of the Safe>\",\n\t\t\"Description\":\"<Description of the Safe>\",\n\t\t\"OLACEnabled\":<true/false>,\n\t\t\"ManagingCPM\":\"<Name of CPM user managing the Safe>\",\n\t\t\"NumberOfVersionsRetention\":<1-999>,\n\t\t\"NumberOfDaysRetention\":<1-3650>\n\t}\n}",
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes/{{Safe}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Safes",
								"{{Safe}}"
							]
						},
						"description": "This method updates a single Safe in the Vault. The user who runs this web service requires the following permissions:\n\nIn the Vault:\n* Manage Safes\n\nIn the Safe:\n* View Safe Members"
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"type": "text",
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"disabled": true
									},
									{
										"type": "text",
										"value": "application/json",
										"key": "Content-Type",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"safe\": {\n        \"Description\": \"Production, Windows, Local Administrators\"\n    }\n}"
								},
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:18:14 GMT"
								},
								{
									"key": "Content-Length",
									"value": "224"
								}
							],
							"cookie": [],
							"body": "{\n    \"UpdateSafeResult\": {\n        \"Description\": \"Production, Windows, Local Administrators\",\n        \"ManagingCPM\": \"PasswordManagerNG\",\n        \"NumberOfDaysRetention\": null,\n        \"NumberOfVersionsRetention\": 5,\n        \"OLACEnabled\": false,\n        \"SafeName\": \"P-WIN-LOCAL-ADMIN\"\n    }\n}"
						}
					]
				},
				{
					"name": "Delete Safe",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"type": "text"
							},
							{
								"type": "text",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Safes/{{Safe}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Safes",
								"{{Safe}}"
							]
						},
						"description": "This method deletes a Safe from the Vault.\n\nThe user who runs this web service requires **Manage Safe** permissions in the Vault."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Server",
			"item": [
				{
					"name": "Logo",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Logo?type=square",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Logo"
							],
							"query": [
								{
									"key": "type",
									"value": "square"
								}
							]
						},
						"description": "This method returns the configuration of the logo that will be displayed in the CyberArk SafeShare logon screen and account settings."
					},
					"response": []
				},
				{
					"name": "Server",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"value": "{{CyberArkLogonResult}}",
								"key": "Authorization",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Server",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Server"
							]
						},
						"description": "This method returns the display name of the Vault configured in the **ServerDisplayName** configuration parameter."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"type": "text",
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:21:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "79"
								}
							],
							"cookie": [],
							"body": "{\n    \"ExternalVersion\": \"10.5.0\",\n    \"InternalVersion\": \"10.5.0.48\",\n    \"ServerName\": \"Vault\"\n}"
						}
					]
				},
				{
					"name": "Verify",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"type": "text",
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [],
							"options": {}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Verify",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"WebServices",
								"PIMServices.svc",
								"Verify"
							]
						},
						"description": "This method returns the display name of the Vault configured in the **ServerDisplayName** configuration parameter."
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Session Management",
			"item": [
				{
					"name": "Get All Connection Components",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"description": "Session Authorization Token"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/PSM/Connectors",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"PSM",
								"Connectors"
							]
						},
						"description": "This method allows Vault admins to get the list of all connection components of an entire environment."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/PSM/Connectors",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"PSM",
										"Connectors"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache,no-cache"
								},
								{
									"key": "Content-Length",
									"value": "1468"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=7E8A61F4E4D93A92; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=000000026D4CE685405C9F6384A1470D20CF85E65CD2B6F87C6293EC75EFE7FEB204632700000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=ldap; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=3159600;includeSubdomains;"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Sep 2020 00:54:41 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"PSMConnectors\": [\n        {\n            \"ID\": \"SSH\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"RDP\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PuTTY\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"RDPapplet-Sample\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"RDPWinApplet\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"WebConnection\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-RDP\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-SSH\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-Telnet-Sample\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-TOAD\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-SQLPlus\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-VSPHERE\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-AS400\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-OS390\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-SQLServerMgmtStudio\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-WebFormSample\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-SQLServerMgmtStudio-Win\",\n            \"DisplayName\": \"SQL Server Mgmt Studio\"\n        },\n        {\n            \"ID\": \"PSM-PVWA\",\n            \"DisplayName\": \"CyberArk Password Vault Web Application v9\"\n        },\n        {\n            \"ID\": \"PSM-PrivateArkClient\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-VNCClientSample\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-VNCClientSample-AutoDeployed\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-AWSConsoleWithSTS\",\n            \"DisplayName\": \"AWS Console with STS\"\n        },\n        {\n            \"ID\": \"PSM-WinSCP\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-PTA\",\n            \"DisplayName\": \"CyberArk PTA\"\n        },\n        {\n            \"ID\": \"PSM-WebAppSample\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-MS-AzurePortal\",\n            \"DisplayName\": \"Microsoft Azure Portal\"\n        },\n        {\n            \"ID\": \"PSM-VSPHERE-Web\",\n            \"DisplayName\": \"VMWare vSphere Web\"\n        },\n        {\n            \"ID\": \"PSM-PVWA-v10\",\n            \"DisplayName\": \"CyberArk Password Vault Web Application v10\"\n        },\n        {\n            \"ID\": \"PSM-SAPGUI\",\n            \"DisplayName\": \"\"\n        },\n        {\n            \"ID\": \"PSM-SQLServerMgmtStudio-Database\",\n            \"DisplayName\": \"SQL Server Mgmt Studio Database\"\n        }\n    ],\n    \"Total\": 30\n}"
						}
					]
				},
				{
					"name": "Get All PSM Servers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"description": "Session Authorization Token"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/PSM/Servers",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"PSM",
								"Servers"
							]
						},
						"description": "This method allows Vault admins to get a list of all PSM servers defined for an environment."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Session Authorization Token",
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									},
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/PSM/Servers",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"PSM",
										"Servers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache,no-cache"
								},
								{
									"key": "Content-Length",
									"value": "197"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=7E8A61F4E4D93A92; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=000000026D4CE685405C9F6384A1470D20CF85E65CD2B6F87C6293EC75EFE7FEB204632700000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=ldap; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=3159600;includeSubdomains;"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Sep 2020 00:55:48 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"PSMServers\": [\n        {\n            \"ID\": \"PSMServer_a91999c\",\n            \"Name\": \"PSM Server on PASAAS-PVWA\",\n            \"Address\": \"54.88.213.184\"\n        },\n        {\n            \"ID\": \"PSMServer\",\n            \"Name\": \"PSM Server on PASAAS-PSM\",\n            \"Address\": \"psm.joegarcia.dev\"\n        }\n    ],\n    \"Total\": 2\n}"
						}
					]
				},
				{
					"name": "Get Session Management Policy of Platform",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"description": "Session Authorization Token"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/Platforms/Targets/{{PlatformName}}/PrivilegedSessionManagement",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"Platforms",
								"Targets",
								"{{PlatformName}}",
								"PrivilegedSessionManagement"
							]
						},
						"description": "This method allows Vault admins to retrieve the PSM Policy Section of a target platform."
					},
					"response": [
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"description": "Session Authorization Token"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/API/Platforms/Targets/{{PlatformName}}/PrivilegedSessionManagement",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"API",
										"Platforms",
										"Targets",
										"{{PlatformName}}",
										"PrivilegedSessionManagement"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache,no-store, no-cache, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache,no-cache"
								},
								{
									"key": "Content-Length",
									"value": "197"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=7E8A61F4E4D93A92; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=000000026D4CE685405C9F6384A1470D20CF85E65CD2B6F87C6293EC75EFE7FEB204632700000000; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=ldap; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; SameSite=Strict; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; SameSite=None; secure; HttpOnly"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=3159600;includeSubdomains;"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Date",
									"value": "Thu, 24 Sep 2020 00:57:16 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Details\": [\n        {\n            \"ParameterName\": \"platformID\",\n            \"ErrorCode\": \"\",\n            \"ErrorMessage\": \"The value 'WinDomain' is not valid for Int64.\"\n        }\n    ],\n    \"ErrorCode\": \"PASWS167E\",\n    \"ErrorMessage\": \"There are some invalid parameters\"\n}"
						}
					]
				},
				{
					"name": "Import Connection Component",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"description": "Session Authorization Token"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ImportFile\": {zip file byte array}\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/ConnectionComponents/Import",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"ConnectionComponents",
								"Import"
							]
						},
						"description": "This method enables administrators to import a new connection component."
					},
					"response": []
				},
				{
					"name": "Update Session Management Policy of Platform",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}",
								"type": "text",
								"description": "Session Authorization Token"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"PSMServerId\":\"PSMServer_e7b11b1\",\n    \"PSMServerName\":\"PSMServer2\",\n    \"PSMConnectors\": [\n        {\n            \"PSMConnectorID\": \"PSM-AWSConsoleWithSTS\",\n            \"Enabled\": false\n        },\n        {\n            \"PSMConnectorID\": \"SSH\",\n            \"Enabled\": true\n        }\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/passwordvault/api/Platforms/Targets/{{PlatformName}}/PrivilegedSessionManagement",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"passwordvault",
								"api",
								"Platforms",
								"Targets",
								"{{PlatformName}}",
								"PrivilegedSessionManagement"
							]
						},
						"description": "This method allows Vault admins to update the PSM Policy Section of a target platform."
					},
					"response": []
				}
			],
			"description": "This section includes REST APIs related to session management.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "System Health",
			"item": [
				{
					"name": "System Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/ComponentsMonitoringDetails/{{ComponentsID}}",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"ComponentsMonitoringDetails",
								"{{ComponentsID}}"
							]
						},
						"description": "This method returns details about specific components and all their installed instances, and system health information for each one.\n\n_Valid ComponentsID values: PVWA/SessionManagement/CPM/AIM_"
					},
					"response": [
						{
							"name": "200 OK (PSM)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:22:10 GMT"
								},
								{
									"key": "Content-Length",
									"value": "366"
								}
							],
							"cookie": [],
							"body": "{\n    \"ComponentsDetails\": [\n        {\n            \"ComponentIP\": \"192.168.3.104\",\n            \"ComponentUserName\": \"PSMPApp_rhel01\",\n            \"ComponentVersion\": \"10.5.0.0\",\n            \"ComponentSpecificStat\": -1,\n            \"IsLoggedOn\": true,\n            \"LastLogonDate\": 1541965510\n        },\n        {\n            \"ComponentIP\": \"192.168.3.108\",\n            \"ComponentUserName\": \"PSMApp_COMP2016\",\n            \"ComponentVersion\": \"10.5.0.1\",\n            \"ComponentSpecificStat\": -1,\n            \"IsLoggedOn\": true,\n            \"LastLogonDate\": 1541898522\n        }\n    ]\n}"
						},
						{
							"name": "200 OK (PVWA)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"disabled": true
									},
									{
										"value": "application/json",
										"key": "Content-Type",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:21:36 GMT"
								},
								{
									"key": "Content-Length",
									"value": "192"
								}
							],
							"cookie": [],
							"body": "{\n    \"ComponentsDetails\": [\n        {\n            \"ComponentIP\": \"192.168.3.108\",\n            \"ComponentUserName\": \"PVWAAppUser1\",\n            \"ComponentVersion\": \"10.5.0.1\",\n            \"ComponentSpecificStat\": -1,\n            \"IsLoggedOn\": true,\n            \"LastLogonDate\": 1541969319\n        }\n    ]\n}"
						},
						{
							"name": "200 OK (CPM)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:22:48 GMT"
								},
								{
									"key": "Content-Length",
									"value": "198"
								}
							],
							"cookie": [],
							"body": "{\n    \"ComponentsDetails\": [\n        {\n            \"ComponentIP\": \"192.168.3.108\",\n            \"ComponentUserName\": \"PasswordManagerNG\",\n            \"ComponentVersion\": \"10.5.0.27\",\n            \"ComponentSpecificStat\": -1,\n            \"IsLoggedOn\": true,\n            \"LastLogonDate\": 1541898371\n        }\n    ]\n}"
						},
						{
							"name": "200 OK (AIM)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:22:30 GMT"
								},
								{
									"key": "Content-Length",
									"value": "200"
								}
							],
							"cookie": [],
							"body": "{\n    \"ComponentsDetails\": [\n        {\n            \"ComponentIP\": \"192.168.3.108\",\n            \"ComponentUserName\": \"Prov_COMPONENTS2016\",\n            \"ComponentVersion\": \"10.5.0.23\",\n            \"ComponentSpecificStat\": -1,\n            \"IsLoggedOn\": true,\n            \"LastLogonDate\": 1541898221\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "System Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{CyberArkLogonResult}}"
							},
							{
								"value": "application/json",
								"key": "Content-Type"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/PasswordVault/API/ComponentsMonitoringSummary",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"PasswordVault",
								"API",
								"ComponentsMonitoringSummary"
							]
						},
						"description": "This method returns consolidated information about the Vault, PVWA, CPM, PSM/PSMP, and AIM, including all clients that are relevant to each specific component."
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{CyberArkLogonResult}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Set-Cookie",
									"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "CA55555=cyberark; path=/PasswordVault/; secure"
								},
								{
									"key": "Set-Cookie",
									"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "Set-Cookie",
									"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
								},
								{
									"key": "X-UA-Compatible",
									"value": "IE=EmulateIE8"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-FRAME-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Warning"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=31536000; includeSubDomains"
								},
								{
									"key": "Date",
									"value": "Sun, 11 Nov 2018 21:23:03 GMT"
								},
								{
									"key": "Content-Length",
									"value": "742"
								}
							],
							"cookie": [],
							"body": "{\n    \"Components\": [\n        {\n            \"ComponentID\": \"PVWA\",\n            \"ComponentName\": \"PVWA\",\n            \"Description\": \"Active Users\",\n            \"ConnectedComponentCount\": 1,\n            \"ComponentTotalCount\": 1,\n            \"ComponentSpecificStat\": 1\n        },\n        {\n            \"ComponentID\": \"CPM\",\n            \"ComponentName\": \"CPM\",\n            \"Description\": \"Managed Accounts\",\n            \"ConnectedComponentCount\": 1,\n            \"ComponentTotalCount\": 1,\n            \"ComponentSpecificStat\": 32\n        },\n        {\n            \"ComponentID\": \"SessionManagement\",\n            \"ComponentName\": \"PSM/PSMP\",\n            \"Description\": \"Concurrent Sessions\",\n            \"ConnectedComponentCount\": 2,\n            \"ComponentTotalCount\": 2,\n            \"ComponentSpecificStat\": 0\n        },\n        {\n            \"ComponentID\": \"AIM\",\n            \"ComponentName\": \"AIM Credential Provider\",\n            \"Description\": \"Applications\",\n            \"ConnectedComponentCount\": 1,\n            \"ComponentTotalCount\": 1,\n            \"ComponentSpecificStat\": 4\n        }\n    ],\n    \"Vaults\": [\n        {\n            \"IP\": \"192.168.3.101\",\n            \"Role\": \"Primary\",\n            \"IsLoggedOn\": true\n        }\n    ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "v2 API",
							"item": [
								{
									"name": "Get User Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Users/{{UserID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Users",
												"{{UserID}}"
											]
										},
										"description": "This method returns information about a specific user in the Vault.\n\nTo run this Web service, you must have the following permissions:\n\n* Audit users"
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"value": "{{CyberArkLogonResult}}",
														"key": "Authorization",
														"type": "text",
														"disabled": true
													},
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text",
														"disabled": true
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Expires",
													"value": "-1"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Set-Cookie",
													"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "CA55555=cyberark; path=/PasswordVault/; secure"
												},
												{
													"key": "Set-Cookie",
													"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "X-UA-Compatible",
													"value": "IE=EmulateIE8"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-FRAME-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "Warning"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000; includeSubDomains"
												},
												{
													"key": "Date",
													"value": "Sun, 11 Nov 2018 21:23:43 GMT"
												},
												{
													"key": "Content-Length",
													"value": "218"
												}
											],
											"cookie": [],
											"body": "{\n    \"AgentUser\": false,\n    \"Disabled\": false,\n    \"Email\": \"\",\n    \"Expired\": false,\n    \"ExpiryDate\": null,\n    \"FirstName\": \"\",\n    \"LastName\": \"\",\n    \"Location\": \"\\\\\",\n    \"Source\": \"Internal\",\n    \"Suspended\": false,\n    \"UserName\": \"Svc_AnsibleREST\",\n    \"UserTypeName\": \"EPVUser\"\n}"
										}
									]
								},
								{
									"name": "Get Users",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization"
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"filter\": \"userType or componentUser\",\n\t\"search\": \"username, first name, or last name\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Users",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Users"
											]
										},
										"description": "This method returns a list of all existing users in the Vault except for the Master and the Batch built-in users.\n\nTo run this Web service, you must have the following permissions:\n\n* **Audit users**\n\nYou can retrieve only users on the same level as you or lower in the Vault hierarchy.\n\n**Note:** This Web service returns up to 6000 users in up to 20 seconds. If the number of users is higher, the response time may be higher."
									},
									"response": []
								},
								{
									"name": "Logged On User Details",
									"request": {
										"method": "GET",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/User",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"User"
											]
										},
										"description": "This method returns user information of the user who is logged on."
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "{{CyberArkLogonResult}}",
														"type": "text",
														"disabled": true
													},
													{
														"key": "Content-Type",
														"type": "text",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Expires",
													"value": "-1"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Set-Cookie",
													"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "CA55555=cyberark; path=/PasswordVault/; secure"
												},
												{
													"key": "Set-Cookie",
													"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "X-UA-Compatible",
													"value": "IE=EmulateIE8"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-FRAME-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "Warning"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000; includeSubDomains"
												},
												{
													"key": "Date",
													"value": "Sun, 11 Nov 2018 21:23:17 GMT"
												},
												{
													"key": "Content-Length",
													"value": "223"
												}
											],
											"cookie": [],
											"body": "{\n    \"AgentUser\": false,\n    \"Disabled\": false,\n    \"Email\": \"\",\n    \"Expired\": false,\n    \"ExpiryDate\": null,\n    \"FirstName\": \"\",\n    \"LastName\": \"\",\n    \"Location\": \"\\\\\",\n    \"Source\": \"Internal\",\n    \"Suspended\": false,\n    \"UserName\": \"Administrator\",\n    \"UserTypeName\": \"Built-InAdmins\"\n}"
										}
									]
								},
								{
									"name": "Add User",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text"
											},
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"username\":\"newUser\",\n    \"userType\": \"EPVUser\",\n    \"initialPassword\": \"123Cyber\",\n    \"authenticationMethod\": [\"AuthTypePass\"],\n    \"location\": \"\\\\\",\n    \"unAuthorizedInterfaces\": [\"PSM\", \"PSMP\"],\n    \"expiryDate\": 1577836800,\n    \"vaultAuthorization\": [\"AddSafes\", \"AuditUsers\" ],\n    \"enableUser\": true,\n    \"changePassOnNextLogon\": true,\n    \"passwordNeverExpires\": true,\n    \"distinguishedName\": \"newUser@cyberark\",\n    \"description\": \"This user is privileged\",\n    \"businessAddress\":\n     {\n     \"workStreet\": \"Hapssagot 9\",\n     \"workCity\": \"Petah Tikva\",\n     \"workState\": \"Israel\",\n     \"workZip\": \"9999999\",\n     \"workCountry\": \"Israel\"\n     },\n    \"internet\":\n     {\n     \"homePage\": \"Cyberark.com\",\n     \"homeEmail\": \"user@gmail.com\",\n     \"businessEmail\": \"user@cyberark.com\",\n     \"otherEmail\": \"user2@gmail.com\"\n     },\n    \"phones\": {\n     \"homeNumber\": \"555123456\",\n     \"businessNumber\": \"555456789\",\n     \"cellularNumber\": \"555789789\",\n     \"faxNumber\": \"999999\",\n     \"pagerNumber\": \"111111\"\n  },\n  \"personalDetails\": {\n    \"street\": \"Dizzengof 56\",\n    \"city\": \"Tel Aviv\",\n    \"state\": \"Israel\",\n    \"zip\": \"123456\",\n    \"country\": \"Israel\",\n    \"title\": \"Mr. VIP\",\n    \"organization\": \"Cyber ark\",\n    \"department\": \"R&D\",\n    \"profession\": \"software development\",\n    \"firstName\": \"John\",\n    \"middleName\": \"Doe\",\n    \"lastName\": \"Smith\"\n  }\n}\n",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Users",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Users"
											]
										},
										"description": "This method adds a new user to the Vault.\n\nTo run this Web service, you must have the following permissions:\n\n* Add Users\n* Update Users"
									},
									"response": []
								},
								{
									"name": "Reset User Password",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text"
											},
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"id\": \"<integer>\",\n\t\"newPassword\": \"<string>\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/Users/{{UserID}}/ResetPassword",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"Users",
												"{{UserID}}",
												"ResetPassword"
											]
										},
										"description": "This method resets an existing Vault user's password.\n\nTo run this Web service, you must have the following permissions:\n\n* **Audit users**\n* **Reset Users' Passwords**\n\nThe user who runs this Web service must be in the same Vault Location or higher as the user whose password is being reset."
									},
									"response": []
								},
								{
									"name": "Activate User",
									"request": {
										"method": "PUT",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Users/{{UserID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Users",
												"{{UserID}}"
											]
										},
										"description": "This method activates an existing Vault user who was suspended after entering incorrect credentials multiple times.\n\n**Note:** This method activates a suspended user. It does not activate an inactive user."
									},
									"response": []
								},
								{
									"name": "Update User",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"NewPassword\":\"<string>\",\n\t\"Email\":\"<string>\",\n\t\"FirstName\":\"<string>\",\n\t\"LastName\":\"<string>\",\n\t\"ChangePasswordOnTheNextLogon\":<bool>,\n\t\"ExpiryDate\":\"<string>\",\n\t\"UserTypeName\":\"<string>\",\n\t\"Disabled\":<bool>,\n\t\"Location\":\"<string>\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Users/{{UserID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Users",
												"{{UserID}}"
											]
										},
										"description": "This method updates an existing Vault user."
									},
									"response": []
								},
								{
									"name": "Delete User",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text"
											},
											{
												"value": "application/json",
												"key": "Content-Type",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Users/{{UserID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Users",
												"{{UserID}}"
											]
										},
										"description": "This method deletes a specific user in the Vault."
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "v1 API",
							"item": [
								{
									"name": "Add User",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"UserName\":\"<string>\",\n\t\"InitialPassword\":\"<string>\",\n\t\"Email\":\"<string>\",\n\t\"FirstName\":\"<string>\",\n\t\"LastName\":\"<string>\",\n\t\"ChangePasswordOnTheNextLogon\":<bool>,\n\t\"ExpiryDate\":\"<string>\",\n\t\"UserTypeName\":\"<string>\",\n\t\"Disabled\":<bool>,\n\t\"Location\":\"<string>\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Users",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Users"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Groups",
					"item": [
						{
							"name": "v2 API",
							"item": [
								{
									"name": "Get Groups",
									"request": {
										"method": "GET",
										"header": [
											{
												"type": "text",
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/UserGroups",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"UserGroups"
											]
										},
										"description": "This method returns a list of all existing user groups.\n\nThe user performing this task:\n\n* Must have **Audit users** permissions in the Safe.\n* Can see groups either **only** on the **same** level, or **lower** in the Vault hierarchy.\n\nThis depends on the HideVaultUsersTree parameter defined in the dbparam.ini. If HideVaultUsersTree is set to **No**, all groups will be returned (not only those in the same level or lower in the Vault hierarchy). If this parameter is set to **Yes**, only auditors and managers will be allowed to get all groups.\n \t\n**Note:**\n* Filtering for this task is supported only from Vault v10.5.\n* Retrieving more than 1,000 groups may cause a slowdown in response."
									},
									"response": [
										{
											"name": "200 OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "{{CyberArkLogonResult}}",
														"disabled": true
													},
													{
														"type": "text",
														"value": "application/json",
														"key": "Content-Type",
														"disabled": true
													}
												],
												"url": {
													"raw": ""
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Cache-Control",
													"value": "no-cache, no-store, must-revalidate"
												},
												{
													"key": "Pragma",
													"value": "no-cache"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Expires",
													"value": "-1"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Set-Cookie",
													"value": "CA22222=BE36C14D1FE1AAFA; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "CA11111=00000002A2FA411668862E3FD3D87ACCFC25E30E79362257102F7C6E3D265BFB2223998300000000; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "CA55555=cyberark; path=/PasswordVault/; secure"
												},
												{
													"key": "Set-Cookie",
													"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "Set-Cookie",
													"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
												},
												{
													"key": "X-UA-Compatible",
													"value": "IE=EmulateIE8"
												},
												{
													"key": "X-XSS-Protection",
													"value": "1; mode=block"
												},
												{
													"key": "X-Content-Type-Options",
													"value": "nosniff"
												},
												{
													"key": "X-FRAME-Options",
													"value": "SAMEORIGIN"
												},
												{
													"key": "Access-Control-Expose-Headers",
													"value": "Warning"
												},
												{
													"key": "Strict-Transport-Security",
													"value": "max-age=31536000; includeSubDomains"
												},
												{
													"key": "Date",
													"value": "Sun, 11 Nov 2018 21:23:56 GMT"
												},
												{
													"key": "Content-Length",
													"value": "1831"
												}
											],
											"cookie": [],
											"body": "{\n    \"value\": [\n        {\n            \"id\": 26,\n            \"groupName\": \"CyberArk Vault Admins\",\n            \"groupType\": \"Directory\",\n            \"description\": \"\",\n            \"location\": \"\\\\\",\n            \"directory\": \"cyberarkdemo.com\",\n            \"dn\": \"CN=CyberArk Vault Admins,OU=Groups,OU=CyberArk,DC=cyberarkdemo,DC=com\"\n        },\n        {\n            \"id\": 27,\n            \"groupName\": \"CyberArk Auditors\",\n            \"groupType\": \"Directory\",\n            \"description\": \"\",\n            \"location\": \"\\\\\",\n            \"directory\": \"cyberarkdemo.com\",\n            \"dn\": \"CN=CyberArk Auditors,OU=Groups,OU=CyberArk,DC=cyberarkdemo,DC=com\"\n        },\n        {\n            \"id\": 8,\n            \"groupName\": \"Auditors\",\n            \"groupType\": \"Vault\",\n            \"description\": \"Auditors group\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 12,\n            \"groupName\": \"Notification Engines\",\n            \"groupType\": \"Vault\",\n            \"description\": \"Notification Engines group\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 18,\n            \"groupName\": \"PVWAMonitor\",\n            \"groupType\": \"Vault\",\n            \"description\": \"\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 19,\n            \"groupName\": \"PVWAUsers\",\n            \"groupType\": \"Vault\",\n            \"description\": \"\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 20,\n            \"groupName\": \"PVWAGWAccounts\",\n            \"groupType\": \"Vault\",\n            \"description\": \"\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 21,\n            \"groupName\": \"PVWAAppUsers\",\n            \"groupType\": \"Vault\",\n            \"description\": \"\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 40,\n            \"groupName\": \"PSMMaster\",\n            \"groupType\": \"Vault\",\n            \"description\": \"\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 41,\n            \"groupName\": \"PSMAppUsers\",\n            \"groupType\": \"Vault\",\n            \"description\": \"\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 43,\n            \"groupName\": \"PSMP_ADB_AppUsers\",\n            \"groupType\": \"Vault\",\n            \"description\": \"\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 48,\n            \"groupName\": \"PSMLiveSessionTerminators\",\n            \"groupType\": \"Vault\",\n            \"description\": \"\",\n            \"location\": \"\\\\\"\n        },\n        {\n            \"id\": 7,\n            \"groupName\": \"Backup Users\",\n            \"groupType\": \"Vault\",\n            \"description\": \"Backup users group\",\n            \"location\": \"\\\\System\"\n        },\n        {\n            \"id\": 9,\n            \"groupName\": \"Operators\",\n            \"groupType\": \"Vault\",\n            \"description\": \"Operators group\",\n            \"location\": \"\\\\System\"\n        },\n        {\n            \"id\": 10,\n            \"groupName\": \"DR Users\",\n            \"groupType\": \"Vault\",\n            \"description\": \"DR users group\",\n            \"location\": \"\\\\System\"\n        },\n        {\n            \"id\": 11,\n            \"groupName\": \"Vault Admins\",\n            \"groupType\": \"Vault\",\n            \"description\": \"Vault Admins group\",\n            \"location\": \"\\\\System\"\n        }\n    ],\n    \"count\": 16\n}"
										}
									]
								},
								{
									"name": "Add User to Group",
									"request": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"key": "Authorization"
											},
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"memberId\": \"string\",\n\t\"memberType\": \"Vault\",\n\t\"domainName\": \"string\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/UserGroups/{{GroupID}}/Members/",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"UserGroups",
												"{{GroupID}}",
												"Members",
												""
											]
										},
										"description": "This method adds a user as a member to an existing Vault group. This is relevant for regular Vault users, LDAP mapped groups or LDAP users.\n\nThe user who runs this web service requires the **Add/Update users** permissions in the Vault."
									},
									"response": []
								},
								{
									"name": "Create Group",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"groupName\": \"unique-group-name\",\n\t\"description\": \"The users in this group all have the same authorizations\",\n\t\"location\": \"\\\\\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/UserGroups",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"UserGroups"
											]
										},
										"description": "This method adds a new Vault group.\n\nTo run this Web service, you must have the following permissions:\n\n* Add Users\n* Update Users"
									},
									"response": []
								},
								{
									"name": "Remove User from Group",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{CyberArkLogonResult}}"
											},
											{
												"value": "application/json",
												"type": "text",
												"key": "Content-Type"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/UserGroups/{{GroupID}}/Members/{{Member}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"UserGroups",
												"{{GroupID}}",
												"Members",
												"{{Member}}"
											]
										},
										"description": "This method removes a specific user from a user group in the Vault."
									},
									"response": []
								},
								{
									"name": "Delete Group",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"description": "Session Authorization Token"
											},
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/api/UserGroups/{{GroupID}}",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"api",
												"UserGroups",
												"{{GroupID}}"
											]
										},
										"description": "his method deletes a user group.\n\nIn order to delete a user group, the following authorizations are required:\n\n* Add/Update Users\n"
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "v1 API",
							"item": [
								{
									"name": "Add User to Group",
									"request": {
										"method": "POST",
										"header": [
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization"
											},
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"UserName\":\"{{UserName}}\"\n}",
											"options": {}
										},
										"url": {
											"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Groups/{{GroupName}}/Users",
											"host": [
												"{{BaseURL}}"
											],
											"path": [
												"PasswordVault",
												"WebServices",
												"PIMServices.svc",
												"Groups",
												"{{GroupName}}",
												"Users"
											]
										},
										"description": "This method adds a specific user to an existing user group in the Vault."
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Public SSH Authentication",
					"item": [
						{
							"name": "Get Public SSH Key",
							"request": {
								"method": "GET",
								"header": [
									{
										"type": "text",
										"value": "application/json",
										"key": "Content-Type"
									},
									{
										"type": "text",
										"value": "{{CyberArkLogonResult}}",
										"key": "Authorization"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Users/{{UserName}}/AuthenticationMethods/SSHKeyAuthentication/AuthorizedKeys",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Users",
										"{{UserName}}",
										"AuthenticationMethods",
										"SSHKeyAuthentication",
										"AuthorizedKeys"
									]
								},
								"description": "This method retrieves all public SSH keys that are authorized for a specific user.\n\nThe user who runs this web service requires the following permission in the Vault:\n\n* Reset Users' Passwords\n\nIn addition, the user who runs this web service must be in the same Vault Location or higher as the user whose public SSH keys are retrieved.\n\n**Note:** A user cannot manage their own public SSH keys."
							},
							"response": [
								{
									"name": "200 OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"type": "text",
												"value": "application/json",
												"key": "Content-Type",
												"disabled": true
											},
											{
												"value": "{{CyberArkLogonResult}}",
												"type": "text",
												"key": "Authorization",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=4ABDF2ACF3631783; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000023499379417FDD458BE724511B64B9FC15D401D17FC20D9B076FCFDD4A209896D00000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Wed, 21 Nov 2018 03:03:15 GMT"
										},
										{
											"key": "Content-Length",
											"value": "833"
										}
									],
									"cookie": [],
									"body": "{\n    \"GetUserAuthorizedKeysResult\": [\n        {\n            \"KeyID\": \"9EE257E234F73FE335DF8049E72DC0F3\",\n            \"PublicSSHKey\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDVhosq/CGJ06Lgj6flNVn9YbKUtilGPqvErArXC8mTNajx9r5rYtNBu5pkz4wuHuaHwR8nQivY2iTS+UO+FdoM/k+9o+VeJ3VtFPQq6/5mIIXCGs3L6IAkDOYvP45T/aEvnh/EG4C8xpZEEku1COfXWO6m3OdWtqoGMwDu8OymppcpXC7acZ/xgcue3aKJAvIQM29y3EGdFc6jFgelJLPCytA9rKY+OZMvLp0MqVL8Ukh2e/5zo+oqmVm9hXsjNiNOUmwdPm9TUxNcdzIETAZJwF65sgBD2ka8YmBKF80Xnb3ZMhDioqABQO9uuEoA3UhQ2M61jyrQ7HY4mXJaKo/If4Mo1q4tcE/0EHiB0uRFgZOSSq8mO22C7Lw8xz+9gTpFQFi7n4HNu5HrTyTsSX0FHv7xi4Z3wbqkrmPlmmXgV5VnyOA+ApqWHzoZqlwxUiUbYrnKHjWaivNqjXSyFHgV/cBYk/yH+f2wJaOlM1Dh8mvGpy6mojWAUHBC8xcENzJ7DIs2AgB43Ri+s6wqYRmNjwe9zBW1yi0IEq51KqVT2f+DYLNQ6FJl9jHBDl7npvZPKnK9uKKZmfZ+6GLgMCX8FRL+WOA9Ft51VcvIOlZeN59AW70AwXe7lh/ZdTRiyveYKmrSdWrFr3XYHaX7CANmIgoH1ZFG4RjG/cQ+e2jYMQ==\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Add a Public SSH Key",
							"request": {
								"method": "POST",
								"header": [
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									},
									{
										"value": "{{CyberArkLogonResult}}",
										"type": "text",
										"key": "Authorization"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"PublicSSHKey\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDVhosq/CGJ06Lgj6flNVn9YbKUtilGPqvErArXC8mTNajx9r5rYtNBu5pkz4wuHuaHwR8nQivY2iTS+UO+FdoM/k+9o+VeJ3VtFPQq6/5mIIXCGs3L6IAkDOYvP45T/aEvnh/EG4C8xpZEEku1COfXWO6m3OdWtqoGMwDu8OymppcpXC7acZ/xgcue3aKJAvIQM29y3EGdFc6jFgelJLPCytA9rKY+OZMvLp0MqVL8Ukh2e/5zo+oqmVm9hXsjNiNOUmwdPm9TUxNcdzIETAZJwF65sgBD2ka8YmBKF80Xnb3ZMhDioqABQO9uuEoA3UhQ2M61jyrQ7HY4mXJaKo/If4Mo1q4tcE/0EHiB0uRFgZOSSq8mO22C7Lw8xz+9gTpFQFi7n4HNu5HrTyTsSX0FHv7xi4Z3wbqkrmPlmmXgV5VnyOA+ApqWHzoZqlwxUiUbYrnKHjWaivNqjXSyFHgV/cBYk/yH+f2wJaOlM1Dh8mvGpy6mojWAUHBC8xcENzJ7DIs2AgB43Ri+s6wqYRmNjwe9zBW1yi0IEq51KqVT2f+DYLNQ6FJl9jHBDl7npvZPKnK9uKKZmfZ+6GLgMCX8FRL+WOA9Ft51VcvIOlZeN59AW70AwXe7lh/ZdTRiyveYKmrSdWrFr3XYHaX7CANmIgoH1ZFG4RjG/cQ+e2jYMQ==\"\n}",
									"options": {}
								},
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Users/{{UserName}}/AuthenticationMethods/SSHKeyAuthentication/AuthorizedKeys",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Users",
										"{{UserName}}",
										"AuthenticationMethods",
										"SSHKeyAuthentication",
										"AuthorizedKeys"
									]
								},
								"description": "This method adds an authorized public SSH key for a specific user in the Vault, allowing them to authenticate to the Vault through PSM for SSH using a corresponding private SSH key.\n\nThe user who runs this web service requires **Reset Users' Passwords** permissions in the Vault.\n\nIn addition, the user who runs this web service must be in the same Vault location as or higher than the user whose public SSH keys are added.\n\n**Note:** A user cannot manage their own public SSH keys."
							},
							"response": [
								{
									"name": "201 The public SSH key was added successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"type": "text",
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"PublicSSHKey\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDVhosq/CGJ06Lgj6flNVn9YbKUtilGPqvErArXC8mTNajx9r5rYtNBu5pkz4wuHuaHwR8nQivY2iTS+UO+FdoM/k+9o+VeJ3VtFPQq6/5mIIXCGs3L6IAkDOYvP45T/aEvnh/EG4C8xpZEEku1COfXWO6m3OdWtqoGMwDu8OymppcpXC7acZ/xgcue3aKJAvIQM29y3EGdFc6jFgelJLPCytA9rKY+OZMvLp0MqVL8Ukh2e/5zo+oqmVm9hXsjNiNOUmwdPm9TUxNcdzIETAZJwF65sgBD2ka8YmBKF80Xnb3ZMhDioqABQO9uuEoA3UhQ2M61jyrQ7HY4mXJaKo/If4Mo1q4tcE/0EHiB0uRFgZOSSq8mO22C7Lw8xz+9gTpFQFi7n4HNu5HrTyTsSX0FHv7xi4Z3wbqkrmPlmmXgV5VnyOA+ApqWHzoZqlwxUiUbYrnKHjWaivNqjXSyFHgV/cBYk/yH+f2wJaOlM1Dh8mvGpy6mojWAUHBC8xcENzJ7DIs2AgB43Ri+s6wqYRmNjwe9zBW1yi0IEq51KqVT2f+DYLNQ6FJl9jHBDl7npvZPKnK9uKKZmfZ+6GLgMCX8FRL+WOA9Ft51VcvIOlZeN59AW70AwXe7lh/ZdTRiyveYKmrSdWrFr3XYHaX7CANmIgoH1ZFG4RjG/cQ+e2jYMQ==\"\n}"
										},
										"url": {
											"raw": ""
										}
									},
									"status": "The public SSH key was added successfully",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=4ABDF2ACF3631783; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000023499379417FDD458BE724511B64B9FC15D401D17FC20D9B076FCFDD4A209896D00000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Wed, 21 Nov 2018 03:01:57 GMT"
										},
										{
											"key": "Content-Length",
											"value": "830"
										}
									],
									"cookie": [],
									"body": "{\n    \"AddUserAuthorizedKeyResult\": {\n        \"KeyID\": \"9EE257E234F73FE335DF8049E72DC0F3\",\n        \"PublicSSHKey\": \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDVhosq/CGJ06Lgj6flNVn9YbKUtilGPqvErArXC8mTNajx9r5rYtNBu5pkz4wuHuaHwR8nQivY2iTS+UO+FdoM/k+9o+VeJ3VtFPQq6/5mIIXCGs3L6IAkDOYvP45T/aEvnh/EG4C8xpZEEku1COfXWO6m3OdWtqoGMwDu8OymppcpXC7acZ/xgcue3aKJAvIQM29y3EGdFc6jFgelJLPCytA9rKY+OZMvLp0MqVL8Ukh2e/5zo+oqmVm9hXsjNiNOUmwdPm9TUxNcdzIETAZJwF65sgBD2ka8YmBKF80Xnb3ZMhDioqABQO9uuEoA3UhQ2M61jyrQ7HY4mXJaKo/If4Mo1q4tcE/0EHiB0uRFgZOSSq8mO22C7Lw8xz+9gTpFQFi7n4HNu5HrTyTsSX0FHv7xi4Z3wbqkrmPlmmXgV5VnyOA+ApqWHzoZqlwxUiUbYrnKHjWaivNqjXSyFHgV/cBYk/yH+f2wJaOlM1Dh8mvGpy6mojWAUHBC8xcENzJ7DIs2AgB43Ri+s6wqYRmNjwe9zBW1yi0IEq51KqVT2f+DYLNQ6FJl9jHBDl7npvZPKnK9uKKZmfZ+6GLgMCX8FRL+WOA9Ft51VcvIOlZeN59AW70AwXe7lh/ZdTRiyveYKmrSdWrFr3XYHaX7CANmIgoH1ZFG4RjG/cQ+e2jYMQ==\"\n    }\n}"
								}
							]
						},
						{
							"name": "Delete Public SSH Key",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"value": "application/json",
										"key": "Content-Type",
										"type": "text"
									},
									{
										"key": "Authorization",
										"type": "text",
										"value": "{{CyberArkLogonResult}}"
									}
								],
								"url": {
									"raw": "{{BaseURL}}/PasswordVault/WebServices/PIMServices.svc/Users/{{UserName}}/AuthenticationMethods/SSHKeyAuthentication/AuthorizedKeys/{{KeyID}}",
									"host": [
										"{{BaseURL}}"
									],
									"path": [
										"PasswordVault",
										"WebServices",
										"PIMServices.svc",
										"Users",
										"{{UserName}}",
										"AuthenticationMethods",
										"SSHKeyAuthentication",
										"AuthorizedKeys",
										"{{KeyID}}"
									]
								},
								"description": "This method deletes an authorized public SSH key for a specific user in the Vault, preventing them from authenticating to the Vault via PSM for SSH using a corresponding private SSH key.\n\nThe user who runs this web service requires **Reset Users' Passwords** permission in the Vault.\n\nIn addition, the user who runs this web service must be in the same Vault location as or higher than the user whose public SSH keys are deleted.\n\n**Note:** A user cannot manage their own public SSH keys."
							},
							"response": [
								{
									"name": "200 The public SSH key was deleted successfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text",
												"disabled": true
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "{{CyberArkLogonResult}}",
												"disabled": true
											}
										],
										"url": {
											"raw": ""
										}
									},
									"status": "The public SSH key was deleted successfully",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "-1"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Set-Cookie",
											"value": "CA22222=4ABDF2ACF3631783; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA11111=000000023499379417FDD458BE724511B64B9FC15D401D17FC20D9B076FCFDD4A209896D00000000; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "CA55555=cyberark; path=/PasswordVault/; secure"
										},
										{
											"key": "Set-Cookie",
											"value": "CA33333=; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "Set-Cookie",
											"value": "mobileState=Desktop; path=/PasswordVault/; secure; HttpOnly"
										},
										{
											"key": "X-UA-Compatible",
											"value": "IE=EmulateIE8"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "X-FRAME-Options",
											"value": "SAMEORIGIN"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Warning"
										},
										{
											"key": "Strict-Transport-Security",
											"value": "max-age=31536000; includeSubDomains"
										},
										{
											"key": "Date",
											"value": "Wed, 21 Nov 2018 03:05:36 GMT"
										},
										{
											"key": "Content-Length",
											"value": "0"
										}
									],
									"cookie": [],
									"body": null
								}
							]
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "This section includes REST APIs for managing users and groups.",
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"disabled": false,
			"listen": "prerequest",
			"script": {
				"id": "766a3a87-c222-46a3-b5fe-6f3cd95f21f6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"disabled": false,
			"listen": "test",
			"script": {
				"id": "47cfa652-d7ac-41ed-b4fc-44f38661a23a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}